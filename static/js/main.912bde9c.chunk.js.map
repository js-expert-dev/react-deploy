{"version":3,"sources":["PrivateRoute.js","constants/index.js","Components/Login/Login.js","Components/Login/action.js","Components/layout/sidebar/SideNavItems/SideNavItem.js","Components/layout/sidebar/SideBar.js","Components/layout/Topbar/TopBar.js","Components/Users/Staff/Order/AllOrders.js","Components/Users/Staff/Order/PendingOrder.js","Components/Users/Staff/Order/VerifiedOrder.js","Components/Users/Staff/Order/Completed.js","Components/Users/Staff/Order/InProgress.js","Components/Users/Admin/Bill/store/action.js","Components/Users/Staff/Bill/AllBills.js","Components/Users/Staff/Bill/PendingBills.js","Components/Users/Staff/Bill/paidBills.js","Components/Users/Staff/Dashboard.js","Components/Users/Staff/StaffRoutes.js","Components/Users/Admin/Staff/Store/action.js","Components/Users/Admin/Dashboard.js","Components/Users/Admin/Items/ItemGetData.js","Components/Users/Admin/utils/utils.js","Components/Users/Admin/Items/EditItem.js","Components/Users/Admin/Items/ItemsDetails.js","Components/Users/Admin/Items/AddItem.js","Components/Users/Admin/Items/action.js","Components/Users/Admin/Cataegories/CatagoryGetData.js","Components/Users/Admin/Cataegories/EditCategory.js","Components/Users/Admin/Cataegories/CategoryDetails.js","Components/Users/Admin/Cataegories/AddCategory.js","Components/Users/Admin/Cataegories/action.js","Components/Users/Admin/Table/TableGetData.js","Components/Users/Admin/Table/EditTable.js","Components/Users/Admin/Table/TableDetails.js","Components/Users/Admin/Table/AddTable.js","Components/Users/Admin/Table/action.js","Components/Users/Admin/Staff/StaffDetails.js","Components/Users/Admin/Staff/AddStaff.js","Components/Users/Admin/Staff/EditStaff.js","Components/Users/Admin/Order/AllOrders.js","Components/Users/Admin/Order/PendingOrder.js","Components/Users/Admin/Order/VerifiedOrder.js","Components/Users/Admin/Bill/PendingBills.js","Components/Users/Admin/Order/InProgress.js","Components/Users/Admin/Order/Completed.js","Components/Users/Admin/Bill/PaidBills.js","Components/Users/Admin/Bill/AllBills.js","Components/Users/Admin/countDown.js","Components/Users/Admin/AdminRoutes.js","Components/layout/Layout.js","Components/ForgetPassword/forget.js","Components/ForgetPassword/ResetPassword.js","RootRoute.js","Components/Login/reducer.js","Components/Users/Admin/Bill/store/reducer.js","Components/Users/Admin/Staff/Store/reducer.js","Reducer/index.reducer.js","store.js","Components/PromiseLoader.js","App.js","serviceWorker.js","index.js"],"names":["PrivateRoute","Component","component","rest","render","props","localStorage","getItem","to","pathname","state","from","location","url","api","login","base_url","types","apiCategory","apiTable","apiItems","apiAddUser","apiGetUser","apiDelUser","apiUpdateUser","apiGetPaidBills","apiGetPendingBills","apiGetAllBills","apiUpdateBillStatus","Login","handleChange","e","setState","target","name","value","handleSubmit","event","preventDefault","form","currentTarget","validated","checkValidity","data","email","password","stopPropagation","newProps","loggedIn","user","isAdmin","this","history","push","Container","Row","Col","md","span","offset","className","Card","Form","noValidate","onSubmit","Group","InputGroup","FormControl","onChange","placeholder","aria-label","aria-describedby","required","Append","Text","id","type","Button","variant","block","onClick","connect","dispatch","a","axios","post","response","payload","token","setItem","status","toast","error","message","SideNavItem","useState","open","setOpen","navItem","children","length","aria-expanded","icon","displayName","Collapse","in","map","child","key","route","SideBar","match","adminNavigation","userNavigation","includes","nav","index","TopBar","toggleSidebar","NavDropdown","title","Item","clear","AllOrders","isLoaded","orders","isOrder","fetch","method","headers","Accept","then","res","json","result","alert","order","_id","style","color","toUpperCase","dateTime","checkIn","table","hallNo","tableNo","orderDetail","items","item","quantity","PendingOrder","isVerify","isHome","approved","orderApproved","orderId","apiUrl","options","body","JSON","stringify","success","homeShow","VerifyShow","textAlign","VerifiedOrder","orderInProgress","OrderShow","CompletedOrder","InProgressOrder","orderCompleted","actionGetPaidBills","get","catch","actionGetPendingBills","actionGetAlldBills","updateBillStatus","put","AllBills","search","filterItems","allBills","filter","amount","toLowerCase","indexOf","substr","allBill","updateSearch","bind","paymentType","getAllBillsReducer","PendingBills","pendingBills","updateBill","pendingBill","getPendingBillsReducer","PaidBills","paidBills","paidBill","getPaidBillsReducer","Dashboard","StaffRoutes","path","exact","actionGetStaffUser","staffUser","toString","getStaffUsersReducer","ItemGetData","console","log","itemId","FormData","append","src","image","alt","width","height","price","category","description","margin","editItem","deleteItem","React","toFormData","obj","formKey","namespace","fd","property","hasOwnProperty","Date","toISOString","File","EditItem","initialState","itemCate","isLoading","product","handleImageChange","files","formData","onFormSubmit","pageTitle","rows","cat","class","require","default","API_URL","itemsDetails","itemid","isAddItem","isEditProduct","home","config","AddItem","itemCat","addItems","disabled","CategoryData","editCategory","EditCategory","htmlFor","CategoryDetails","categoryId","isAddCategory","isHomeShow","AddCategory","addCategory","TableGetData","size","checkInCode","delCategory","EditTable","tableDetails","AddTable","addTable","StaffDetails","editUser","deleteUser","actionDeleteStaffUser","staff","delete","AddStaff","checked","addStaffUser","maxLength","EditStaff","updateStaffUser","goBack","Example","time","seconds","timer","startTimer","countDown","secs","divisor_for_minutes","divisor_for_seconds","h","Math","floor","m","s","ceil","timeLeftVar","secondsToTime","setInterval","clearInterval","AdminRoutes","ItemsDetails","TableDetails","Layout","isSideNavOpen","position","bottom","left","padding","Forget","POSITION","TOP_CENTER","ResetPassword","inputHandler","submitHandler","newPassword","conPassword","RootRoute","INITIAL_STATE","combineReducers","Object","assign","action","middleware","thunk","store","createStore","rootReducer","applyMiddleware","PromiseLoader","usePromiseTracker","promiseInProgress","loading","App","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.912bde9c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={props => (\r\n        localStorage.getItem('token')\r\n            ? <Component {...props} />\r\n            : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\r\n    )} />\r\n);","const pro_url = 'https://smart-ordering-bk.herokuapp.com';\r\n// const dev_url = 'http://localhost:3000';\r\nexport const url = pro_url;\r\n\r\nexport const api = {\r\n  login: '',\r\n  base_url: url + '/auth/signin',\r\n};\r\n\r\nexport const types = {\r\n  loggedIn: 'LOGGED_IN',\r\n  user: 'USER',\r\n  token: 'TOKEN',\r\n  getPaidBills: 'GET_PAID_BILLS',\r\n  getPendingBills: 'GET_PENDING_BILLS',\r\n  getAllBills: 'GET_ALL_BILLS',\r\n  getStaffUser: 'GET_STAFF_USER',\r\n  deleteStaffUser: 'DELETE_STAFF_USER',\r\n};\r\n\r\nexport const apiCategory = {\r\n  base_url: url + '/category',\r\n};\r\n\r\nexport const categoryTypes = {};\r\n\r\nexport const apiTable = {\r\n  base_url: url + '/table',\r\n};\r\n\r\nexport const apiItems = {\r\n  base_url: url + '/item',\r\n};\r\n\r\nexport const apiAddUser = {\r\n  base_url: url + '/user',\r\n};\r\n\r\nexport const apiGetUser = {\r\n  base_url: url + '/user',\r\n};\r\nexport const apiDelUser = {\r\n  base_url: url + '/user/',\r\n};\r\n\r\nexport const apiUpdateUser = {\r\n  base_url: url + '/user/',\r\n};\r\n\r\nexport const apiGetPaidBills = {\r\n  base_url: url + '/bill?status=paid',\r\n};\r\nexport const apiGetPendingBills = {\r\n  base_url: url + '/bill?status=pending',\r\n};\r\nexport const apiGetAllBills = {\r\n  base_url: url + '/bill?status=all',\r\n};\r\n\r\nexport const apiUpdateBillStatus = {\r\n  base_url: url + '/bill/',\r\n};\r\n","import React, { Component } from 'react';\r\nimport {\r\n  Card,\r\n  Col,\r\n  Container,\r\n  Form,\r\n  Row,\r\n  InputGroup,\r\n  FormControl,\r\n  Button,\r\n} from 'react-bootstrap';\r\nimport './Login.css';\r\nimport { login } from './action';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      validated: false,\r\n      email: '',\r\n      password: '',\r\n    };\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    if (newProps.loggedIn.loggedIn && newProps.user.user) {\r\n      if (newProps.user.user.isAdmin) {\r\n        this.props.history.push('/admin');\r\n      } else {\r\n        this.props.history.push('/staff');\r\n      }\r\n    }\r\n  }\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const form = event.currentTarget;\r\n    this.setState({ validated: true });\r\n    if (form.checkValidity() === false) {\r\n      event.stopPropagation();\r\n      return;\r\n    }\r\n    const data = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    };\r\n    delete data.validated;\r\n\r\n    this.props.login(data);\r\n  };\r\n\r\n  render() {\r\n    const { validated, email, password } = this.state;\r\n\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col md={{ span: 6, offset: 3 }} className=\"align-self-center\">\r\n            <h1 className=\"text-center font-weight-bold mt-5\">\r\n              Smart Ordering\r\n            </h1>\r\n            <Card>\r\n              <small className=\"text-center mt-5 mb-3\">Sign In</small>\r\n              <Form\r\n                className=\"mx-5\"\r\n                noValidate\r\n                validated={validated}\r\n                onSubmit={this.handleSubmit}\r\n              >\r\n                <Form.Group>\r\n                  <InputGroup>\r\n                    <FormControl\r\n                      value={email}\r\n                      onChange={this.handleChange}\r\n                      name=\"email\"\r\n                      placeholder=\"Email\"\r\n                      aria-label=\"Username or Email\"\r\n                      aria-describedby=\"username-addon\"\r\n                      required\r\n                    />\r\n                    <InputGroup.Append>\r\n                      <InputGroup.Text id=\"username-addon\">\r\n                        <i className=\"fas fa-user\" />\r\n                      </InputGroup.Text>\r\n                    </InputGroup.Append>\r\n                  </InputGroup>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <InputGroup>\r\n                    <FormControl\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      value={password}\r\n                      onChange={this.handleChange}\r\n                      placeholder=\"Password\"\r\n                      aria-label=\"Password\"\r\n                      aria-describedby=\"password-addon\"\r\n                      required\r\n                    />\r\n                    <InputGroup.Append>\r\n                      <InputGroup.Text id=\"password-addon\">\r\n                        <i className=\"fas fa-lock\" />\r\n                      </InputGroup.Text>\r\n                    </InputGroup.Append>\r\n                  </InputGroup>\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-5\">\r\n                  <Button variant=\"primary\" block type=\"submit\">\r\n                    Login\r\n                  </Button>\r\n                  <small\r\n                    className=\"text-info btn p-0\"\r\n                    onClick={() => {\r\n                      this.props.history.push('/forget');\r\n                    }}\r\n                  >\r\n                    ForgotPassword?\r\n                  </small>\r\n                </Form.Group>\r\n              </Form>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loggedIn: state.loggedIn,\r\n    user: state.user,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import { api, types } from '../../constants/index';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport const login = (data) => async (dispatch) => {\r\n  try {\r\n    // await axios.post(api.base_url,data);\r\n\r\n    const response = await axios.post(api.base_url, data);\r\n\r\n    dispatch({ type: types.loggedIn, payload: true });\r\n    dispatch({ type: types.user, payload: response.data.data.user });\r\n    const token = response.data.data.token;\r\n\r\n    localStorage.setItem('token', token);\r\n\r\n    return response;\r\n  } catch (err) {\r\n    const { response } = err;\r\n    if (response && response.status === 400) {\r\n      toast.error(response.data.message, {});\r\n    }\r\n    // throw err;\r\n  }\r\n};\r\n","import React, {useState} from \"react\";\r\nimport Collapse from \"react-bootstrap/Collapse\";\r\nimport {Link} from \"react-router-dom\";\r\nimport './SideNavItem.css';\r\n\r\nfunction SideNavItem(props) {\r\n    const [open, setOpen] = useState(false);\r\n    const {navItem} = props;\r\n    return (\r\n        <>\r\n            {!navItem.children.length ? (\r\n                <li className=\"side-nav-item\">\r\n                    <Link to={navItem.route} className=\"nav-item-link bg-transparent\">\r\n                        {navItem.icon}<span className=\"mr-2\"/> {navItem.displayName}\r\n                    </Link>\r\n                </li>\r\n\r\n            ) : (\r\n                <li className=\"side-nav-item\">\r\n                    <span\r\n                        className=\"nav-item-link\"\r\n                        onClick={() => setOpen(!open)}\r\n                        aria-expanded={open}\r\n                    >\r\n                        {navItem.icon}<span className=\"mr-2\"/> {navItem.displayName}\r\n                    </span>\r\n                    <Collapse in={open}>\r\n                        <ul className=\"list-unstyled mt-2\">\r\n                            {navItem.children.map(child => (\r\n                                <SideNavItem navItem={child} key={child.displayName}/>\r\n                            ))}\r\n\r\n                        </ul>\r\n                    </Collapse>\r\n                </li>\r\n            )}\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SideNavItem;\r\n\r\n\r\n","import React from 'react';\r\nimport './SideBar.css';\r\nimport SideNavItem from './SideNavItems/SideNavItem';\r\n// import {useSelector} from \"react-redux\";\r\n\r\nfunction SideBar(props) {\r\n  const {\r\n    match: { url },\r\n    location,\r\n  } = props;\r\n\r\n  const adminNavigation = [\r\n    {\r\n      displayName: 'Dashboard',\r\n      route: `${url}/dashboard`,\r\n      icon: <i className=\"fas fa-tachometer-alt\" />,\r\n      children: [],\r\n    },\r\n    {\r\n      displayName: 'Item Management',\r\n      icon: <i className=\"far fa-object-group\" />,\r\n      children: [\r\n        {\r\n          displayName: 'Item Details',\r\n          route: `${url}/items`,\r\n          icon: <i className=\"far fa-circle\" />,\r\n          children: [],\r\n        },\r\n        {\r\n          displayName: 'Add Item',\r\n          route: `${url}/items/add`,\r\n          icon: <i className=\"far fa-circle\" />,\r\n          children: [],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      displayName: 'Category Management',\r\n      icon: <i className=\"fas fa-location-arrow\" />,\r\n      children: [\r\n        {\r\n          displayName: 'Category Details',\r\n          route: `${url}/category`,\r\n          icon: <i className=\"far fa-circle\" />,\r\n          children: [],\r\n        },\r\n        {\r\n          displayName: 'Add Category',\r\n          route: `${url}/category/add`,\r\n          icon: <i className=\"far fa-circle\" />,\r\n          children: [],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      displayName: 'Table Management',\r\n      icon: <i className=\"fas fa-hourglass-half\" />,\r\n      children: [\r\n        {\r\n          displayName: 'Table Details',\r\n          route: `${url}/table`,\r\n          icon: <i className=\"far fa-circle\" />,\r\n          children: [],\r\n        },\r\n        {\r\n          displayName: 'Add Table',\r\n          route: `${url}/table/add`,\r\n          icon: <i className=\"far fa-circle\" />,\r\n          children: [],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      displayName: 'Staff Management',\r\n      icon: <i className=\"fas fa-users\" />,\r\n      children: [\r\n        {\r\n          displayName: 'User Details',\r\n          route: `${url}/user`,\r\n          icon: <i className=\"far fa-circle\" />,\r\n          children: [],\r\n        },\r\n        {\r\n          displayName: 'Add User',\r\n          route: `${url}/user/add`,\r\n          icon: <i className=\"far fa-circle\" />,\r\n          children: [],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      displayName: 'Order Management',\r\n      icon: <i className=\"far fa-bell\" />,\r\n      children: [\r\n        {\r\n          displayName: 'All Orders',\r\n          route: `${url}/orders`,\r\n          icon: <i className=\"far fa-circle\" />,\r\n          children: [],\r\n        },\r\n        {\r\n          displayName: 'Pending Orders',\r\n          route: `${url}/orders/pending`,\r\n          icon: <i className=\"far fa-circle\" />,\r\n          children: [],\r\n        },\r\n        {\r\n          displayName: 'Approved Orders',\r\n          route: `${url}/orders/approved`,\r\n          icon: <i className=\"far fa-circle\" />,\r\n          children: [],\r\n        },\r\n        {\r\n          displayName: 'In Progress Orders',\r\n          route: `${url}/orders/progress`,\r\n          icon: <i className=\"far fa-circle\" />,\r\n          children: [],\r\n        },\r\n        {\r\n          displayName: 'Completed Orders',\r\n          route: `${url}/orders/Complete`,\r\n          icon: <i className=\"far fa-circle\" />,\r\n          children: [],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      displayName: 'Bill Management',\r\n      icon: <i className=\"fas fa-stream\" />,\r\n      children: [\r\n        {\r\n          displayName: 'All Bills',\r\n          route: `${url}/bills`,\r\n          icon: <i className=\"far fa-circle\" />,\r\n          children: [],\r\n        },\r\n        {\r\n          displayName: 'Pending Bills',\r\n          route: `${url}/bills/pending`,\r\n          icon: <i className=\"far fa-circle\" />,\r\n          children: [],\r\n        },\r\n        {\r\n          displayName: 'Paid Bills',\r\n          route: `${url}/bills/paid`,\r\n          icon: <i className=\"far fa-circle\" />,\r\n          children: [],\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const userNavigation = [\r\n    {\r\n      displayName: 'Dashboard',\r\n      route: `${url}/dashboard`,\r\n      icon: <i className=\"fas fa-tachometer-alt\" />,\r\n      children: [],\r\n    },\r\n    {\r\n      displayName: 'Order Management',\r\n      icon: <i className=\"fas fa-hourglass-half\" />,\r\n      children: [\r\n        {\r\n          displayName: 'All Orders',\r\n          route: `${url}/order`,\r\n          icon: <i className=\"far fa-circle\" />,\r\n          children: [],\r\n        },\r\n        {\r\n          displayName: 'Pending Order',\r\n          route: `${url}/order/pending`,\r\n          icon: <i className=\"far fa-circle\" />,\r\n          children: [],\r\n        },\r\n        {\r\n          displayName: 'Approved Order',\r\n          route: `${url}/order/approved`,\r\n          icon: <i className=\"far fa-circle\" />,\r\n          children: [],\r\n        },\r\n        {\r\n          displayName: 'In Progress Order',\r\n          route: `${url}/order/progress`,\r\n          icon: <i className=\"far fa-circle\" />,\r\n          children: [],\r\n        },\r\n        {\r\n          displayName: 'Completed Order',\r\n          route: `${url}/order/Complete`,\r\n          icon: <i className=\"far fa-circle\" />,\r\n          children: [],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      displayName: 'Bill Management',\r\n      icon: <i className=\"far fa-bell\" />,\r\n      children: [\r\n        {\r\n          displayName: 'All Bills',\r\n          route: `${url}/bill`,\r\n          icon: <i className=\"far fa-circle\" />,\r\n          children: [],\r\n        },\r\n        {\r\n          displayName: 'Pending Bills',\r\n          route: `${url}/bill/pending`,\r\n          icon: <i className=\"far fa-circle\" />,\r\n          children: [],\r\n        },\r\n        {\r\n          displayName: 'Paid Bills',\r\n          route: `${url}/bill/paid`,\r\n          icon: <i className=\"far fa-circle\" />,\r\n          children: [],\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n  return (\r\n    <div className=\"sidebar-bg border-right\" id=\"sidebar-wrapper\">\r\n      <div className=\"sidebar-heading\">\r\n        <h4 className=\"mb-0\">Smart Ordering</h4>\r\n        {/* <small className=\"version\">\r\n          Version 0.1.0.0 <span className=\"badge badge-primary\">Beta</span>\r\n        </small> */}\r\n        {location.pathname.includes('admin') ? (\r\n          <h6 className=\"mt-1\">Admin</h6>\r\n        ) : (\r\n          <h6 className=\"mt-1\">Staff</h6>\r\n        )}\r\n      </div>\r\n      <ul className=\"list-unstyled nav-ul\">\r\n        {location.pathname.includes('admin') &&\r\n          adminNavigation.map((nav, index) => (\r\n            <SideNavItem navItem={nav} key={`${nav.displayName}${index}`} />\r\n          ))}\r\n\r\n        {location.pathname.includes('staff') &&\r\n          userNavigation.map((nav, index) => (\r\n            <SideNavItem navItem={nav} key={`${nav.displayName}${index}`} />\r\n          ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SideBar;\r\n","import React from 'react';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\n\r\nfunction TopBar(props) {\r\n  const onLogout = () => {\r\n    localStorage.clear();\r\n    props.history.push('/login');\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light border-bottom\">\r\n      <button\r\n        className=\"btn\"\r\n        id=\"menu-toggle\"\r\n        onClick={() => props.toggleSidebar()}\r\n      >\r\n        <i className=\"fas fa-bars\" />\r\n      </button>\r\n\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav ml-auto mt-2 mt-lg-0\">\r\n          <NavDropdown\r\n            title={\r\n              <>\r\n                <i className=\"fas fa-user mr-1\" />{' '}\r\n                {props.location.pathname.includes('admin') ? 'Admin' : 'Staff'}\r\n              </>\r\n            }\r\n            id=\"collasible-nav-dropdown\"\r\n          >\r\n            <NavDropdown.Item onClick={() => onLogout()}>\r\n              <i className=\"fas fa-sign-out-alt\" /> Sign Out\r\n            </NavDropdown.Item>\r\n          </NavDropdown>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default TopBar;\r\n","import React, { Component, Fragment } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { url } from '../../../../constants/index';\r\nexport default class AllOrders extends Component {\r\n  state = {\r\n    isLoaded: false,\r\n    orders: [],\r\n    isOrder: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const apiUrl = url + '/order';\r\n    const token = localStorage.getItem('token');\r\n\r\n    const options = {\r\n      method: 'GET',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'access-token': token,\r\n      },\r\n    };\r\n\r\n    return fetch(apiUrl, options)\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        if (!result.error) {\r\n          this.setState({\r\n            isLoaded: true,\r\n            orders: result.data,\r\n          });\r\n        } else {\r\n          alert('Error is Found');\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.isLoaded) {\r\n      return (\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12 col-sm-12 col-lg-12 col-xl-12 col-12\">\r\n              <h1 className=\"text-center p-1\">All Orders</h1>\r\n              <table className=\"table table-strip\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Status</th>\r\n                    <th>Date</th>\r\n                    <th>Table Details</th>\r\n                    <th>Items Details</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {this.state?.orders?.map((order) => (\r\n                    <tr key={order._id}>\r\n                      <td style={{ color: 'red' }}>\r\n                        <b>{order?.status.toUpperCase()}</b>\r\n                      </td>\r\n                      <td>{order?.dateTime}</td>\r\n                      <td>\r\n                        <ul>\r\n                          <li>\r\n                            <b>Hall # </b> {order?.checkIn?.table?.hallNo}\r\n                          </li>\r\n                          <li>\r\n                            <b>Table # </b> {order?.checkIn?.table?.tableNo}\r\n                          </li>\r\n                        </ul>\r\n                      </td>\r\n                      <td>\r\n                        {order?.orderDetail?.map((items) => (\r\n                          <ul key={items._id}>\r\n                            <li>\r\n                              <b>Name : </b>\r\n                              {items?.item?.name}\r\n                            </li>\r\n                            <li>\r\n                              <b>Quantity :</b> {items?.quantity}\r\n                            </li>\r\n                          </ul>\r\n                        ))}\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <h1>Data is loading......</h1>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { url } from '../../../../constants/index';\r\n\r\nclass PendingOrder extends Component {\r\n  state = {\r\n    isLoaded: false,\r\n    orders: [],\r\n    isVerify: false,\r\n    isHome: false,\r\n    approved: {},\r\n  };\r\n\r\n  componentDidMount() {\r\n    const apiUrl = url + '/order?status=pending';\r\n    const token = localStorage.getItem('token');\r\n\r\n    const options = {\r\n      method: 'GET',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'access-token': token,\r\n      },\r\n    };\r\n\r\n    return fetch(apiUrl, options)\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        if (!result.error) {\r\n          this.setState({\r\n            isLoaded: true,\r\n            orders: result.data,\r\n          });\r\n        } else {\r\n          alert('Error is Found');\r\n        }\r\n      });\r\n  }\r\n\r\n  orderApproved = (orderId) => {\r\n    const apiUrl = url + '/order/' + orderId;\r\n    const token = localStorage.getItem('token');\r\n\r\n    const data = {\r\n      status: 'approved',\r\n    };\r\n\r\n    const options = {\r\n      method: 'PUT',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'access-token': token,\r\n      },\r\n      body: JSON.stringify(data),\r\n    };\r\n\r\n    return fetch(apiUrl, options)\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        if (!result.error) {\r\n          this.setState({\r\n            approved: result.data,\r\n          });\r\n          toast.success('Order is updated successfully.');\r\n        } else {\r\n          alert('Error is Found');\r\n        }\r\n      });\r\n  };\r\n\r\n  homeShow = () => {\r\n    this.setState({\r\n      isVerify: false,\r\n      isHome: true,\r\n    });\r\n  };\r\n  VerifyShow = () => {\r\n    this.setState({\r\n      isVerify: true,\r\n      isHome: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.isLoaded) {\r\n      return (\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12 col-sm-12 col-lg-12 col-xl-12 col-12\">\r\n              <h1 style={{ textAlign: 'center' }}>Pending Orders</h1>\r\n\r\n              <table className=\"table table-strip\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Status</th>\r\n                    <th>Date</th>\r\n                    <th>Table Details</th>\r\n                    <th>Items Details</th>\r\n                    <th>Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {this.state.orders?.map((order) => (\r\n                    <tr key={order._id}>\r\n                      <td style={{ color: 'red' }}>\r\n                        <b>{order?.status?.toUpperCase()}</b>\r\n                      </td>\r\n                      <td>{order?.dateTime}</td>\r\n                      <td>\r\n                        <ul>\r\n                          <li>\r\n                            <b>Hall # </b> {order?.checkIn?.table?.hallNo}{' '}\r\n                          </li>\r\n                          <li>\r\n                            <b>Table # </b> {order?.checkIn?.table?.tableNo}{' '}\r\n                          </li>\r\n                        </ul>\r\n                      </td>\r\n                      <td>\r\n                        {order?.orderDetail?.map((items) => (\r\n                          <ul key={items._id}>\r\n                            <li>\r\n                              <b>Name : </b>\r\n                              {items?.item?.name}{' '}\r\n                            </li>\r\n                            <li>\r\n                              <b>Quantity :</b> {items?.quantity}{' '}\r\n                            </li>\r\n                          </ul>\r\n                        ))}\r\n                      </td>\r\n                      <td>\r\n                        <button\r\n                          className=\"btn btn-outline-success btn-small\"\r\n                          onClick={() => this.orderApproved(order._id)}\r\n                        >\r\n                          Approve\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <h1>Data is loading......</h1>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default PendingOrder;\r\n","import React, { Component, Fragment } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { url } from '../../../../constants/index';\r\n\r\nexport default class VerifiedOrder extends Component {\r\n  state = {\r\n    isLoaded: false,\r\n    orders: [],\r\n    isOrder: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const apiUrl = url + '/order?status=approved';\r\n    const token = localStorage.getItem('token');\r\n\r\n    const options = {\r\n      method: 'GET',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'access-token': token,\r\n      },\r\n    };\r\n\r\n    return fetch(apiUrl, options)\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        if (!result.error) {\r\n          this.setState({\r\n            isLoaded: true,\r\n            orders: result.data,\r\n          });\r\n        } else {\r\n          alert('Error is Found');\r\n        }\r\n      });\r\n  }\r\n\r\n  orderInProgress = (orderId) => {\r\n    const apiUrl = url + '/order/' + orderId;\r\n    const token = localStorage.getItem('token');\r\n\r\n    const data = {\r\n      status: 'in-progress',\r\n    };\r\n\r\n    const options = {\r\n      method: 'PUT',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'access-token': token,\r\n      },\r\n      body: JSON.stringify(data),\r\n    };\r\n\r\n    return fetch(apiUrl, options)\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        if (!result.error) {\r\n          this.setState({\r\n            approved: result.data,\r\n          });\r\n          toast.success('Order is updated successfully.');\r\n        } else {\r\n          alert('Error is Found');\r\n        }\r\n      });\r\n  };\r\n\r\n  OrderShow = () => {\r\n    this.setState({\r\n      isOrder: true,\r\n    });\r\n  };\r\n  render() {\r\n    if (this.state.isLoaded) {\r\n      return (\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12 col-sm-12 col-lg-12 col-xl-12 col-12\">\r\n              <h1 className=\"text-center p-1\">Approved Orders</h1>\r\n              <table className=\"table table-strip\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Status</th>\r\n                    <th>Date</th>\r\n                    <th>Table Details</th>\r\n                    <th>Items Details</th>\r\n                    <th>Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {this.state?.orders?.map((order) => (\r\n                    <tr key={order._id}>\r\n                      <td style={{ color: 'red' }}>\r\n                        <b>{order?.status.toUpperCase()}</b>\r\n                      </td>\r\n                      <td>{order?.dateTime}</td>\r\n                      <td>\r\n                        <ul>\r\n                          <li>\r\n                            <b>Hall # </b> {order?.checkIn?.table?.hallNo}\r\n                          </li>\r\n                          <li>\r\n                            <b>Table # </b> {order?.checkIn?.table?.tableNo}\r\n                          </li>\r\n                        </ul>\r\n                      </td>\r\n                      <td>\r\n                        {order?.orderDetail?.map((items) => (\r\n                          <ul key={items._id}>\r\n                            <li>\r\n                              <b>Name : </b>\r\n                              {items?.item?.name}\r\n                            </li>\r\n                            <li>\r\n                              <b>Quantity :</b> {items?.quantity}\r\n                            </li>\r\n                          </ul>\r\n                        ))}\r\n                      </td>\r\n                      <td>\r\n                        <button\r\n                          className=\"btn btn-outline-success btn-small\"\r\n                          onClick={() => this.orderInProgress(order._id)}\r\n                        >\r\n                          In Prograss\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <h1>Data is loading......</h1>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n","import React, { Component, Fragment } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { url } from '../../../../constants/index';\r\n\r\nexport default class CompletedOrder extends Component {\r\n  state = {\r\n    isLoaded: false,\r\n    orders: [],\r\n    isOrder: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const apiUrl = url +'/order?status=completed';\r\n    const token = localStorage.getItem('token');\r\n\r\n    const options = {\r\n      method: 'GET',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'access-token': token,\r\n      },\r\n    };\r\n\r\n    return fetch(apiUrl, options)\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        if (!result.error) {\r\n          this.setState({\r\n            isLoaded: true,\r\n            orders: result.data,\r\n          });\r\n        } else {\r\n          alert('Error is Found');\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.isLoaded) {\r\n      return (\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12 col-sm-12 col-lg-12 col-xl-12 col-12\">\r\n              <h1 className=\"text-center p-1\">Completed Orders</h1>\r\n              <table className=\"table table-strip\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Status</th>\r\n                    <th>Date</th>\r\n                    <th>Table Details</th>\r\n                    <th>Items Details</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {this.state?.orders?.map((order) => (\r\n                    <tr key={order._id}>\r\n                      <td style={{ color: 'red' }}>\r\n                        <b>{order?.status.toUpperCase()}</b>\r\n                      </td>\r\n                      <td>{order?.dateTime}</td>\r\n                      <td>\r\n                        <ul>\r\n                          <li>\r\n                            <b>Hall # </b> {order?.checkIn?.table?.hallNo}\r\n                          </li>\r\n                          <li>\r\n                            <b>Table # </b> {order?.checkIn?.table?.tableNo}\r\n                          </li>\r\n                        </ul>\r\n                      </td>\r\n                      <td>\r\n                        {order?.orderDetail?.map((items) => (\r\n                          <ul key={items._id}>\r\n                            <li>\r\n                              <b>Name : </b>\r\n                              {items?.item?.name}\r\n                            </li>\r\n                            <li>\r\n                              <b>Quantity :</b> {items?.quantity}\r\n                            </li>\r\n                          </ul>\r\n                        ))}\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <h1>Data is loading......</h1>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n","import React, { Component, Fragment } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { url } from '../../../../constants/index';\r\n\r\nexport default class InProgressOrder extends Component {\r\n  state = {\r\n    isLoaded: false,\r\n    orders: [],\r\n    isOrder: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const apiUrl = url + '/order?status=in-progress';\r\n    const token = localStorage.getItem('token');\r\n\r\n    const options = {\r\n      method: 'GET',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'access-token': token,\r\n      },\r\n    };\r\n\r\n    return fetch(apiUrl, options)\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        if (!result.error) {\r\n          this.setState({\r\n            isLoaded: true,\r\n            orders: result.data,\r\n          });\r\n        } else {\r\n          alert('Error is Found');\r\n        }\r\n      });\r\n  }\r\n\r\n  orderCompleted = (orderId) => {\r\n    const apiUrl = url + '/order/' + orderId;\r\n    const token = localStorage.getItem('token');\r\n\r\n    const data = {\r\n      status: 'completed',\r\n    };\r\n\r\n    const options = {\r\n      method: 'PUT',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'access-token': token,\r\n      },\r\n      body: JSON.stringify(data),\r\n    };\r\n\r\n    return fetch(apiUrl, options)\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        if (!result.error) {\r\n          this.setState({\r\n            approved: result.data,\r\n          });\r\n          toast.success('Order is updated successfully.');\r\n        } else {\r\n          alert('Error is Found');\r\n        }\r\n      });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.isLoaded) {\r\n      return (\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12 col-sm-12 col-lg-12 col-xl-12 col-12\">\r\n              <h1 className=\"text-center p-1\">In Progress Orders</h1>\r\n              <table className=\"table table-strip\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Status</th>\r\n                    <th>Date</th>\r\n                    <th>Table Details</th>\r\n                    <th>Items Details</th>\r\n                    <th>Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {this.state?.orders?.map((order) => (\r\n                    <tr key={order._id}>\r\n                      <td style={{ color: 'red' }}>\r\n                        <b>{order?.status.toUpperCase()}</b>\r\n                      </td>\r\n                      <td>{order?.dateTime}</td>\r\n                      <td>\r\n                        <ul>\r\n                          <li>\r\n                            <b>Hall # </b> {order?.checkIn?.table?.hallNo}\r\n                          </li>\r\n                          <li>\r\n                            <b>Table # </b> {order?.checkIn?.table?.tableNo}\r\n                          </li>\r\n                        </ul>\r\n                      </td>\r\n                      <td>\r\n                        {order?.orderDetail?.map((items) => (\r\n                          <ul key={items._id}>\r\n                            <li>\r\n                              <b>Name : </b>\r\n                              {items?.item?.name}\r\n                            </li>\r\n                            <li>\r\n                              <b>Quantity :</b> {items?.quantity}\r\n                            </li>\r\n                          </ul>\r\n                        ))}\r\n                      </td>\r\n                      <td>\r\n                        <button\r\n                          className=\"btn btn-outline-success btn-small\"\r\n                          onClick={() => this.orderCompleted(order?._id)}\r\n                        >\r\n                          Complete\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <h1>Data is loading......</h1>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n","import {\r\n  apiGetPaidBills,\r\n  types,\r\n  apiGetPendingBills,\r\n  apiGetAllBills,\r\n  apiUpdateBillStatus,\r\n} from '../../../../../constants/index';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\n// get paid bills\r\nexport const actionGetPaidBills = () => async (dispatch) => {\r\n  const token = localStorage.getItem('token');\r\n  const response = await axios\r\n    .get(apiGetPaidBills.base_url, {\r\n      headers: {\r\n        'access-token': token,\r\n      },\r\n    })\r\n    .then((res) => {\r\n      dispatch({ type: types.getPaidBills, payload: res.data.data });\r\n    })\r\n    .catch((error) => toast.error('error', error));\r\n};\r\n// get pending bills\r\nexport const actionGetPendingBills = () => async (dispatch) => {\r\n  const token = localStorage.getItem('token');\r\n  const response = await axios\r\n    .get(apiGetPendingBills.base_url, {\r\n      headers: {\r\n        'access-token': token,\r\n      },\r\n    })\r\n    .then((res) => {\r\n      dispatch({ type: types.getPendingBills, payload: res.data.data });\r\n    })\r\n    .catch((error) => toast.error('error', error));\r\n};\r\n// get all bills\r\nexport const actionGetAlldBills = () => async (dispatch) => {\r\n  const token = localStorage.getItem('token');\r\n  const response = await axios\r\n    .get(apiGetAllBills.base_url, {\r\n      headers: {\r\n        'access-token': token,\r\n      },\r\n    })\r\n    .then((res) => {\r\n      dispatch({ type: types.getAllBills, payload: res.data.data });\r\n    })\r\n    .catch((error) => toast.error('error', error));\r\n};\r\n// update bill status\r\nexport const updateBillStatus = (id, data) => async (dispatch) => {\r\n  const token = localStorage.getItem('token');\r\n\r\n  const response = await axios\r\n    .put(apiUpdateBillStatus.base_url + id, data, {\r\n      headers: {\r\n        'access-token': token,\r\n      },\r\n    })\r\n    .then((res) => {\r\n      toast.success('Bill status is updated successfully.');\r\n      return res;\r\n    })\r\n    .catch((error) => toast.error('error', error));\r\n};\r\n","import React, { Component } from 'react';\r\nimport { actionGetAlldBills } from '../../Admin/Bill/store/action';\r\nimport { connect } from 'react-redux';\r\n\r\nclass AllBills extends Component {\r\n  state = {\r\n    search: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.actionGetAlldBills();\r\n  }\r\n\r\n  updateSearch(event) {\r\n    this.setState({\r\n      search: event.target.value.substr(0, 20),\r\n    });\r\n  }\r\n\r\n  filterItems = () => {\r\n    if (this.props?.allBills?.length > 0) {\r\n      return this.props.allBills?.filter((item) => {\r\n        return (\r\n          item.amount.toLowerCase().indexOf(this.state.search.toLowerCase()) !==\r\n          -1\r\n        );\r\n      });\r\n    } else {\r\n      return [];\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let allBill = this.filterItems();\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12 col-sm-12 col-lg-12 col-xl-12 col-12\">\r\n          <br />\r\n          <div className=\"form-group\">\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              placeholder=\"Search bill by amount here\"\r\n              value={this.state.search}\r\n              onChange={this.updateSearch.bind(this)}\r\n            />\r\n          </div>\r\n          <h1 style={{ textAlign: 'center' }}>All Bills</h1>\r\n          <table className=\"table table-strip\">\r\n            <thead>\r\n              <tr>\r\n                <th>Status </th>\r\n                <th>Payment Type </th>\r\n                <th>CheckIn Code </th>\r\n                <th>Amount</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {allBill?.map((order) => (\r\n                <tr key={order.id}>\r\n                  <td style={{ color: 'red' }}>\r\n                    <b>{order?.status.toUpperCase()}</b>\r\n                  </td>\r\n                  <td>{order?.paymentType}</td>\r\n                  <td>{order?.checkIn}</td>\r\n                  <td>{order?.amount} </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = ({ getAllBillsReducer }) => {\r\n  return {\r\n    allBills: getAllBillsReducer.allBills,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { actionGetAlldBills })(AllBills);\r\n","import React, { Component } from 'react';\r\nimport {\r\n  actionGetPendingBills,\r\n  updateBillStatus,\r\n} from '../../Admin/Bill/store/action';\r\nimport { connect } from 'react-redux';\r\n\r\nclass PendingBills extends Component {\r\n  state = {\r\n    search: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.actionGetPendingBills();\r\n  }\r\n\r\n  updateSearch(event) {\r\n    this.setState({\r\n      search: event.target.value.substr(0, 20),\r\n    });\r\n  }\r\n\r\n  filterItems = () => {\r\n    if (this.props?.pendingBills?.length > 0) {\r\n      return this.props.pendingBills?.filter((item) => {\r\n        return (\r\n          item.amount.toLowerCase().indexOf(this.state.search.toLowerCase()) !==\r\n          -1\r\n        );\r\n      });\r\n    } else {\r\n      return [];\r\n    }\r\n  };\r\n\r\n  updateBill = (id) => {\r\n    const data = {\r\n      status: 'paid',\r\n    };\r\n    debugger;\r\n    this.props.updateBillStatus(id, data);\r\n  };\r\n\r\n  render() {\r\n    let pendingBill = this.filterItems();\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12 col-sm-12 col-lg-12 col-xl-12 col-12\">\r\n          <br />\r\n          <div className=\"form-group\">\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              placeholder=\"Search bill by amount here\"\r\n              value={this.state.search}\r\n              onChange={this.updateSearch.bind(this)}\r\n            />\r\n          </div>\r\n          <h1 style={{ textAlign: 'center' }}>Pending Bills</h1>\r\n          <table className=\"table table-strip\">\r\n            <thead>\r\n              <tr>\r\n                <th>Status </th>\r\n                <th>Payment Type </th>\r\n                <th>CheckIn Code </th>\r\n                <th>Amount</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {pendingBill?.map((order) => (\r\n                <tr key={order.id}>\r\n                  <td style={{ color: 'red' }}>\r\n                    <b>{order?.status.toUpperCase()}</b>\r\n                  </td>\r\n                  <td>{order?.paymentType}</td>\r\n                  <td>{order?.checkIn}</td>\r\n                  <td>{order?.amount} </td>\r\n                  <td>\r\n                    <button\r\n                      className=\"btn btn-outline-primary\"\r\n                      onClick={() => this.updateBill(order._id)}\r\n                    >\r\n                      Paid\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = ({ getPendingBillsReducer }) => {\r\n  return {\r\n    pendingBills: getPendingBillsReducer.pendingBills,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  actionGetPendingBills,\r\n  updateBillStatus,\r\n})(PendingBills);\r\n","import React, { Component } from 'react';\r\nimport { actionGetPaidBills } from '../../Admin/Bill/store/action';\r\nimport { connect } from 'react-redux';\r\n\r\nclass PaidBills extends Component {\r\n  state = {\r\n    search: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.actionGetPaidBills();\r\n  }\r\n\r\n  updateSearch(event) {\r\n    this.setState({\r\n      search: event.target.value.substr(0, 20),\r\n    });\r\n  }\r\n\r\n  filterItems = () => {\r\n    if (this.props?.paidBills?.length > 0) {\r\n      return this.props.paidBills?.filter((item) => {\r\n        return (\r\n          item.amount.toLowerCase().indexOf(this.state.search.toLowerCase()) !==\r\n          -1\r\n        );\r\n      });\r\n    } else {\r\n      return [];\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let paidBill = this.filterItems();\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12 col-sm-12 col-lg-12 col-xl-12 col-12\">\r\n          <br />\r\n          <div className=\"form-group\">\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              placeholder=\"Search bill by amount here\"\r\n              value={this.state.search}\r\n              onChange={this.updateSearch.bind(this)}\r\n            />\r\n          </div>\r\n          <h1 style={{ textAlign: 'center' }}>Paid Bills</h1>\r\n          <table className=\"table table-strip\">\r\n            <thead>\r\n              <tr>\r\n                <th>Status </th>\r\n                <th>Payment Type </th>\r\n                <th>CheckIn Code </th>\r\n                <th>Amount</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {paidBill?.map((order) => (\r\n                <tr key={order.id}>\r\n                  <td style={{ color: 'red' }}>\r\n                    <b>{order?.status.toUpperCase()}</b>\r\n                  </td>\r\n                  <td>{order?.paymentType}</td>\r\n                  <td>{order?.checkIn}</td>\r\n                  <td>{order?.amount} </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = ({ getPaidBillsReducer }) => {\r\n  return {\r\n    paidBills: getPaidBillsReducer.paidBills,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { actionGetPaidBills })(PaidBills);\r\n","import React, { Component } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport './Dashboard.css';\r\n\r\nexport default class Dashboard extends Component {\r\n  render() {\r\n    let { history } = this.props;\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col md={4}>\r\n            <div className=\"dbox dbox--color-2\">\r\n              <div className=\"dbox__icon\">\r\n                <i className=\"far fa-bell\" />\r\n              </div>\r\n              <div className=\"dbox__body\">\r\n                <span className=\"dbox__count\">100</span>\r\n                <span className=\"dbox__title\">Total Orders</span>\r\n              </div>\r\n\r\n              <div className=\"dbox__action\">\r\n                <button\r\n                  className=\"dbox__action__btn\"\r\n                  onClick={() => history.push('/staff/order')}\r\n                >\r\n                  MoreInfo\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n          <Col md={4}>\r\n            <div className=\"dbox dbox--color-3\">\r\n              <div className=\"dbox__icon\">\r\n                <i className=\"far fa-object-group\" />\r\n              </div>\r\n              <div className=\"dbox__body\">\r\n                <span className=\"dbox__count\">5</span>\r\n                <span className=\"dbox__title\">Total Bills</span>\r\n              </div>\r\n              <div className=\"dbox__action\">\r\n                <button\r\n                  className=\"dbox__action__btn\"\r\n                  onClick={() => history.push('/staff/bill')}\r\n                >\r\n                  MoreInfo\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport AllOrders from './Order/AllOrders';\r\nimport PendingOrder from './Order/PendingOrder';\r\nimport VerifiedOrder from './Order/VerifiedOrder';\r\nimport CompletedOrder from './Order/Completed';\r\nimport InProgressOrder from './Order/InProgress';\r\nimport AllBills from './Bill/AllBills';\r\nimport PendingBills from './Bill/PendingBills';\r\nimport PaidBills from './Bill/paidBills';\r\nimport { Route } from 'react-router-dom';\r\nimport Dashboard from './Dashboard';\r\nexport const StaffRoutes = (props) => {\r\n  let { match } = props;\r\n  debugger;\r\n  return (\r\n    <>\r\n      <Route path={`${match.path}/dashboard`} component={Dashboard} />\r\n      <Route exact path={`${match.path}/`} component={Dashboard} />\r\n      <Route exact path={`${match.path}/order`} component={AllOrders} />\r\n      <Route\r\n        path={`${match.path}/order/progress`}\r\n        component={InProgressOrder}\r\n      />\r\n      <Route path={`${match.path}/order/Complete`} component={CompletedOrder} />\r\n      <Route path={`${match.path}/order/approved`} component={VerifiedOrder} />\r\n      <Route path={`${match.path}/order/pending`} component={PendingOrder} />\r\n      <Route exact path={`${match.path}/bill`} component={AllBills} />\r\n      <Route path={`${match.path}/bill/pending`} component={PendingBills} />\r\n      <Route path={`${match.path}/bill/paid`} component={PaidBills} />\r\n    </>\r\n  );\r\n};\r\n","import {\r\n  apiAddUser,\r\n  apiUpdateUser,\r\n  types,\r\n  apiGetUser,\r\n  apiDelUser,\r\n} from '../../../../../constants/index';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\n//get staff user\r\nexport const actionGetStaffUser = () => async (dispatch) => {\r\n  const token = localStorage.getItem('token');\r\n  const response = await axios\r\n    .get(apiGetUser.base_url, {\r\n      headers: {\r\n        'access-token': token,\r\n      },\r\n    })\r\n    .then((res) => {\r\n      dispatch({ type: types.getStaffUser, payload: res.data.data });\r\n    })\r\n    .catch((error) => toast.error('error', error));\r\n};\r\n//delete staff user\r\nexport const actionDeleteStaffUser = (id) => async (dispatch) => {\r\n  const token = localStorage.getItem('token');\r\n  const response = await axios\r\n    .delete(apiDelUser.base_url + id, {\r\n      headers: {\r\n        'access-token': token,\r\n      },\r\n    })\r\n    .then((res) => {\r\n      dispatch({ type: types.deleteStaffUser, payload: res.data.data });\r\n      return res;\r\n    })\r\n    .catch((error) => toast.error('error', error));\r\n};\r\n\r\n//add staff user\r\nexport const addStaffUser = (data) => async (dispatch) => {\r\n  const token = localStorage.getItem('token');\r\n\r\n  const response = await axios\r\n    .post(apiAddUser.base_url, data, {\r\n      headers: {\r\n        'access-token': token,\r\n      },\r\n    })\r\n    .then((res) => {\r\n      toast.success('Staff user is added successfully.');\r\n      return res;\r\n    })\r\n    .catch((error) => toast.error('error', error));\r\n};\r\n// update staff user\r\nexport const updateStaffUser = (id, data) => async (dispatch) => {\r\n  const token = localStorage.getItem('token');\r\n\r\n  const response = await axios\r\n    .put(apiUpdateUser.base_url + id, data, {\r\n      headers: {\r\n        'access-token': token,\r\n      },\r\n    })\r\n    .then((res) => {\r\n      toast.success('Staff user is updated successfully.');\r\n      return res;\r\n    })\r\n    .catch((error) => toast.error('error', error));\r\n};\r\n","import React, { Component } from 'react';\r\nimport './Dashboard.css';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { connect } from 'react-redux';\r\nimport { actionGetStaffUser } from './Staff/Store/action';\r\nimport { actionGetPendingBills } from './Bill/store/action';\r\n\r\nclass Dashboard extends Component {\r\n  async componentDidMount() {\r\n    await this.props.actionGetStaffUser();\r\n    await this.props.actionGetPendingBills();\r\n  }\r\n\r\n  render() {\r\n    let { history, staffUser, pendingBills } = this.props;\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col md={4}>\r\n            <div className=\"dbox dbox--color-1\">\r\n              <div className=\"dbox__icon\">\r\n                <i className=\"fas fa-users\" />\r\n              </div>\r\n              <div className=\"dbox__body\">\r\n                <span className=\"dbox__count\">\r\n                  {staffUser.length.toString()}\r\n                </span>\r\n                <span className=\"dbox__title\">Total Users</span>\r\n              </div>\r\n\r\n              <div className=\"dbox__action\">\r\n                <button\r\n                  className=\"dbox__action__btn\"\r\n                  onClick={() => history.push('/admin/user')}\r\n                >\r\n                  MoreInfo\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n          <Col md={4}>\r\n            <div className=\"dbox dbox--color-2\">\r\n              <div className=\"dbox__icon\">\r\n                <i className=\"far fa-bell\" />\r\n              </div>\r\n              <div className=\"dbox__body\">\r\n                <span className=\"dbox__count\">52</span>\r\n                <span className=\"dbox__title\">Total Orders</span>\r\n              </div>\r\n\r\n              <div className=\"dbox__action\">\r\n                <button\r\n                  className=\"dbox__action__btn\"\r\n                  onClick={() => history.push('/admin/orders')}\r\n                >\r\n                  MoreInfo\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n          <Col md={4}>\r\n            <div className=\"dbox dbox--color-3\">\r\n              <div className=\"dbox__icon\">\r\n                <i className=\"far fa-object-group\" />\r\n              </div>\r\n              <div className=\"dbox__body\">\r\n                <span className=\"dbox__count\">\r\n                  {pendingBills.length.toString()}\r\n                </span>\r\n                <span className=\"dbox__title\">Total Pending Bills</span>\r\n              </div>\r\n              <div className=\"dbox__action\">\r\n                <button\r\n                  className=\"dbox__action__btn\"\r\n                  onClick={() => history.push('/admin/bills')}\r\n                >\r\n                  MoreInfo\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ getStaffUsersReducer, getPendingBillsReducer }) => {\r\n  return {\r\n    staffUser: getStaffUsersReducer.staffUser,\r\n    pendingBills: getPendingBillsReducer.pendingBills,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  actionGetStaffUser,\r\n  actionGetPendingBills,\r\n})(Dashboard);\r\n","import React from 'react';\r\n// import { getToken } from \"../utils/common\";\r\nimport { toast } from 'react-toastify';\r\nimport { url } from '../../../../constants/index';\r\n\r\nconst token = localStorage.getItem('token');\r\n\r\nexport default class ItemGetData extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      items: [],\r\n      isLoaded: false,\r\n      response: {},\r\n      search: '',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const apiUrl = url + '/item';\r\n\r\n    const options = {\r\n      method: 'GET',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'access-token': token,\r\n      },\r\n    };\r\n\r\n    return fetch(apiUrl, options)\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            items: result.data,\r\n          });\r\n        },\r\n        (error) => {\r\n          console.log('Error : ' + error);\r\n        }\r\n      );\r\n  }\r\n\r\n  deleteItem(itemId) {\r\n    const { items } = this.state;\r\n\r\n    const apiUrl = url + '/item/' + itemId;\r\n    const formData = new FormData();\r\n    formData.append('itemId', itemId);\r\n\r\n    const options = {\r\n      method: 'DELETE',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'access-token': token,\r\n      },\r\n    };\r\n    fetch(apiUrl, options)\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          toast.success('Item is deleted successfully.');\r\n          this.setState({\r\n            response: result,\r\n            items: items.filter((item) => item._id !== itemId),\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({ error });\r\n        }\r\n      );\r\n  }\r\n\r\n  updateSearch(event) {\r\n    this.setState({\r\n      search: event.target.value.substr(0, 20),\r\n    });\r\n  }\r\n\r\n  filterItems = () => {\r\n    if (this.state.items?.length > 0) {\r\n      return this.state?.items.filter((item) => {\r\n        return (\r\n          item.name.toLowerCase().indexOf(this.state.search.toLowerCase()) !==\r\n          -1\r\n        );\r\n      });\r\n    } else {\r\n      return [];\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let items;\r\n    let isLoaded = this.state.isLoaded;\r\n\r\n    if (!isLoaded) {\r\n      return <div>loading....</div>;\r\n    } else {\r\n      items = this.filterItems();\r\n      return (\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 col-sm-12 col-lg-12 col-xl-12 col-12\">\r\n            <br />\r\n            <div className=\"form-group\">\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                placeholder=\"Search Item here\"\r\n                value={this.state.search}\r\n                onChange={this.updateSearch.bind(this)}\r\n              />\r\n            </div>\r\n\r\n            <h1 style={{ textAlign: 'center' }}>Items Details</h1>\r\n\r\n            <table className=\"table table-strip\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Image</th>\r\n                  <th>Name</th>\r\n                  <th>Price</th>\r\n                  <th>Category</th>\r\n                  <th>Description</th>\r\n                  <th>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {items.map((item) => (\r\n                  <tr key={item.id}>\r\n                    <td>\r\n                      <img\r\n                        src={url + '/' + item.image}\r\n                        alt=\"item Pic\"\r\n                        width=\"100px\"\r\n                        height=\"100px\"\r\n                      />{' '}\r\n                      {console.log(item.image)}\r\n                    </td>\r\n                    <td>{item?.name}</td>\r\n                    <td>{item?.price}</td>\r\n                    <td>{item?.category?.name} </td>\r\n                    <td>{item?.description} </td>\r\n                    <td>\r\n                      <button\r\n                        className=\"btn btn-outline-info btn-small\"\r\n                        style={{ margin: 2 + 'px' }}\r\n                        onClick={() => this.props.editItem(item._id)}\r\n                      >\r\n                        Edit\r\n                      </button>\r\n                      {/* &nbsp;&nbsp; */}\r\n                      <button\r\n                        className=\"btn btn-outline-danger btn-small\"\r\n                        onClick={() => this.deleteItem(item._id)}\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n","function toFormData (obj, form = null, namespace = null) {\r\n    const fd = form || new FormData();\r\n    let formKey;\r\n\r\n    for (const property in obj) {\r\n\r\n        if (typeof obj[property] === 'boolean') {\r\n            obj[property] = obj[property].toString();\r\n        }\r\n\r\n        if (obj.hasOwnProperty(property) && obj[property]) {\r\n            if (namespace) {\r\n                formKey = namespace + '[' + property + ']';\r\n            } else {\r\n                formKey = property;\r\n            }\r\n\r\n            // if the property is an object, but not a File, use recursivity.\r\n            if (obj[property] instanceof Date) {\r\n                fd.append(formKey, obj[property].toISOString());\r\n            } else if (typeof obj[property] === 'object' && !(obj[property] instanceof File)) {\r\n                toFormData(obj[property], fd, formKey);\r\n            } else { // if it's a string or a File object\r\n                fd.append(formKey, obj[property]);\r\n            }\r\n        }\r\n    }\r\n\r\n    return fd;\r\n}\r\n\r\nexport default toFormData;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport toFormData from '../utils/utils';\r\nimport { url } from '../../../../constants/index';\r\n\r\n// import { getToken } from \"../utils/common\";\r\n\r\nconst token = localStorage.getItem('token');\r\n\r\nclass EditItem extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.initialState = {\r\n      image: '',\r\n      name: '',\r\n      price: '',\r\n      description: '',\r\n      category: '',\r\n      itemCate: [],\r\n      isLoading: false,\r\n      _id: '',\r\n    };\r\n    if (props.product) {\r\n      this.state = props.product;\r\n    } else {\r\n      this.state = this.initialState;\r\n    }\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleImageChange = this.handleImageChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  handleImageChange(event) {\r\n    this.setState({ image: event.target.files[0] });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    const formData = toFormData(this.state);\r\n    this.props.onFormSubmit(formData, this.state._id);\r\n    this.setState(this.initialState);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const apiUrl = url + '/category';\r\n\r\n    const options = {\r\n      method: 'GET',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'access-token': token,\r\n      },\r\n    };\r\n\r\n    fetch(apiUrl, options)\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoading: true,\r\n            itemCate: result.data,\r\n          });\r\n        },\r\n        (error) => {\r\n          console.log('Error : ' + error);\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    let pageTitle;\r\n    if (this.state._id) {\r\n      pageTitle = <h2>Edit Item</h2>;\r\n    } else {\r\n      pageTitle = <h2>Item is not Editing</h2>;\r\n    }\r\n\r\n    var { isLoading, itemCate } = this.state;\r\n\r\n    if (!isLoading) {\r\n      return <div>Add item is loading.....</div>;\r\n    } else {\r\n      return (\r\n        <div className=\"Container row\">\r\n          <div className=\"offset-md-2 offset-sm-2 offset-lg-2 offset-xl-2 offset-2 col-md-8 col-sm-8 col-lg-8 col-xl-8 col-8\">\r\n            {pageTitle}\r\n            <form onSubmit={this.handleSubmit}>\r\n              <div className=\"form-group\">\r\n                <label>Image: </label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"file\"\r\n                  name=\"image\"\r\n                  onChange={this.handleImageChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Name : </label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={this.state.name}\r\n                  onChange={this.handleChange}\r\n                  placeholder=\"Item Name\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Price: </label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"number\"\r\n                  name=\"price\"\r\n                  value={this.state.price}\r\n                  onChange={this.handleChange}\r\n                  placeholder=\"Price\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Description : </label>\r\n                <textarea\r\n                  className=\"form-control\"\r\n                  rows=\"5\"\r\n                  type=\"text\"\r\n                  name=\"description\"\r\n                  value={this.state.description}\r\n                  onChange={this.handleChange}\r\n                  placeholder=\"Write the details description of item here\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Category : </label>\r\n                <select\r\n                  className=\"form-control\"\r\n                  value={this.state.category}\r\n                  onChange={(e) => this.setState({ category: e.target.value })}\r\n                >\r\n                  {itemCate.map((cat) => (\r\n                    <option key={cat._id} value={cat._id}>\r\n                      {cat.name}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <input type=\"hidden\" name=\"_id\" value={this.state._id} />\r\n\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">\r\n                <i class=\"fa fa-check\">&nbsp; </i> Save\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default EditItem;\r\n","import React from 'react';\r\nimport ItemList from './ItemGetData';\r\nimport EditItem from './EditItem';\r\nimport { toast } from 'react-toastify';\r\nimport { url } from '../../../../constants/index';\r\n\r\nconst axios = require('axios').default;\r\nconst API_URL = url;\r\nconst token = localStorage.getItem('token');\r\n\r\nexport default class itemsDetails extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isAddItem: false,\r\n      isEditProduct: false,\r\n      home: false,\r\n      error: null,\r\n      response: {},\r\n      product: {},\r\n      itemId: '',\r\n    };\r\n    this.onFormSubmit = this.onFormSubmit.bind(this);\r\n  }\r\n\r\n  onCreate() {\r\n    this.setState({\r\n      isAddItem: true,\r\n      isEditProduct: false,\r\n      home: false,\r\n    });\r\n  }\r\n\r\n  onFormSubmit(data, itemId = null) {\r\n    if (this.state.isEditProduct) {\r\n      const config = {\r\n        method: 'PUT',\r\n        url: API_URL + '/item/' + itemId,\r\n        headers: { 'access-token': token },\r\n        data: data,\r\n      };\r\n\r\n      axios(config).then((result) => {\r\n        toast.success('Item is updated successfully.');\r\n        this.setState({\r\n          isAddItem: false,\r\n          isEditProduct: false,\r\n          home: false,\r\n        });\r\n        // toast.success(result.message);\r\n      });\r\n    } else {\r\n      const config = {\r\n        method: 'POST',\r\n        url: API_URL + '/item',\r\n        headers: { 'access-token': token },\r\n        data: data,\r\n      };\r\n      axios(config).then((result) => {\r\n        this.setState({\r\n          isAddItem: false,\r\n          isEditProduct: false,\r\n          home: false,\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  editItem = (itemid) => {\r\n    this.setState({ itemId: itemid });\r\n    const apiUrl = url + '/item/' + itemid;\r\n\r\n    const options = {\r\n      method: 'GET',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'access-token': token,\r\n      },\r\n    };\r\n\r\n    fetch(apiUrl, options)\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            product: result.data,\r\n            isAddItem: false,\r\n            isEditProduct: true,\r\n            home: false,\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({ error });\r\n        }\r\n      );\r\n    console.log(itemid);\r\n  };\r\n  homeShow() {\r\n    this.setState({\r\n      isAddItem: false,\r\n      isEditProduct: false,\r\n      home: true,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Container\">\r\n        {this.state.response.status === 'success' && (\r\n          <div>\r\n            <br />\r\n            <p>{this.state.response.message}</p>\r\n          </div>\r\n        )}\r\n        {!this.state.isAddItem &&\r\n          !this.state.isEditProduct &&\r\n          !this.state.home && <ItemList editItem={this.editItem} />}\r\n        {!this.state.isAddItem &&\r\n          this.state.isEditProduct &&\r\n          !this.state.home && (\r\n            <EditItem\r\n              onFormSubmit={this.onFormSubmit}\r\n              product={this.state.product}\r\n            />\r\n          )}\r\n        {/* {this.state.home &&\r\n          !this.state.isAddItem &&\r\n          !this.state.isEditProduct && <Home />} */}\r\n        {/* {this.state.isAddItem &&\r\n          !this.state.isEditProduct &&\r\n          !this.state.home && <AddItem onFormSubmit={this.onFormSubmit} />} */}\r\n        {this.state.error && <div>Error: {this.state.error.message}</div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport toFormData from '../utils/utils';\r\nimport './item.css';\r\nimport { addItems } from './action';\r\nimport { connect } from 'react-redux';\r\nimport { url } from '../../../../constants/index';\r\n\r\nclass AddItem extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.initialState = {\r\n      image: '',\r\n      name: '',\r\n      price: '',\r\n      description: '',\r\n      category: '',\r\n      itemCat: [],\r\n      isLoading: false,\r\n    };\r\n\r\n    this.state = this.initialState;\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleImageChange = this.handleImageChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  handleImageChange(event) {\r\n    this.setState({ image: event.target.files[0] });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    const formData = toFormData(this.state);\r\n    this.props.addItems(formData);\r\n    this.setState(this.initialState);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const apiUrl = url + '/category';\r\n    const token = localStorage.getItem('token');\r\n\r\n    const options = {\r\n      method: 'GET',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'access-token': token,\r\n      },\r\n    };\r\n\r\n    return await fetch(apiUrl, options)\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoading: true,\r\n            itemCat: result.data,\r\n          });\r\n        },\r\n        (error) => {\r\n          console.log('Error : ' + error);\r\n        }\r\n      );\r\n  }\r\n\r\n  render() {\r\n    var { isLoading, itemCat } = this.state;\r\n    return (\r\n      <div className=\"Container row\">\r\n        <div className=\"offset-md-2 offset-sm-2 offset-lg-2 offset-xl-2 offset-2 col-md-8 col-sm-8 col-lg-8 col-xl-8 col-8\">\r\n          <h2>Add Product</h2>\r\n          <form onSubmit={this.handleSubmit}>\r\n            <div className=\"form-group\">\r\n              <label>Select image: </label>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"file\"\r\n                name=\"image\"\r\n                onChange={this.handleImageChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Name : </label>\r\n              <input\r\n                required\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={this.state.name}\r\n                onChange={this.handleChange}\r\n                placeholder=\"Item Name\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <br />\r\n              <label>Price: </label>\r\n              <input\r\n                required\r\n                className=\"form-control\"\r\n                type=\"number\"\r\n                name=\"price\"\r\n                value={this.state.price}\r\n                onChange={this.handleChange}\r\n                placeholder=\"Price\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Description : </label>\r\n              <textarea\r\n                required\r\n                className=\"form-control\"\r\n                rows=\"5\"\r\n                type=\"text\"\r\n                name=\"description\"\r\n                value={this.state.description}\r\n                onChange={this.handleChange}\r\n                placeholder=\"Write the details description of item here\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Category : </label>\r\n\r\n              <select\r\n                className=\"form-control\"\r\n                value={this.state.category}\r\n                onChange={(e) => this.setState({ category: e.target.value })}\r\n              >\r\n                <option value=\"\" disabled>\r\n                  select category\r\n                </option>\r\n                {itemCat.map((cat) => (\r\n                  <option key={cat._id} value={cat._id}>\r\n                    {cat.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">\r\n              <i class=\"fa fa-check\">&nbsp; </i> Save\r\n            </button>\r\n            <br />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(null, { addItems })(AddItem);\r\n","import { apiItems } from '../../../../constants/index';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport const addItems = (data) => async (dispatch) => {\r\n  const token = localStorage.getItem('token');\r\n\r\n  const response = await axios\r\n    .post(apiItems.base_url, data, {\r\n      headers: {\r\n        'access-token': token,\r\n      },\r\n    })\r\n    .then((res) => toast.success('Item is added successfully.'))\r\n    .catch((error) => toast.error('error', error));\r\n};\r\n","import React from 'react';\r\nimport { url } from '../../../../constants/index';\r\n\r\n// import { getToken } from \"../utils/common\";\r\n\r\nconst token = localStorage.getItem('token');\r\nexport default class CategoryData extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      items: [],\r\n      isLoaded: false,\r\n      response: {},\r\n      search: '',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const apiUrl = url + '/category';\r\n\r\n    const options = {\r\n      method: 'GET',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'access-token': token,\r\n      },\r\n    };\r\n\r\n    return fetch(apiUrl, options)\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            items: result.data,\r\n            isLoaded: true,\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({ error });\r\n        }\r\n      );\r\n  }\r\n\r\n  delCategory(itemId) {\r\n    const { items } = this.state;\r\n\r\n    const apiUrl = url + '/category/' + itemId;\r\n    const formData = new FormData();\r\n    formData.append('itemId', itemId);\r\n\r\n    const options = {\r\n      method: 'DELETE',\r\n      body: formData,\r\n    };\r\n    fetch(apiUrl, options)\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            response: result,\r\n            items: items.filter((item) => item._id !== itemId),\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({ error });\r\n        }\r\n      );\r\n  }\r\n\r\n  updateSearch(event) {\r\n    this.setState({\r\n      search: event.target.value.substr(0, 20),\r\n    });\r\n  }\r\n  filterItems = () => {\r\n    if (this.state?.items?.length > 0) {\r\n      return this.state?.items?.filter((item) => {\r\n        console.log(\"Item\", item);\r\n        return (\r\n          item?.name?.toLowerCase().indexOf(this.state?.search?.toLowerCase()) !==\r\n          -1\r\n        );\r\n      });\r\n    } else {\r\n      return [];\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let items;\r\n\r\n    let isLoaded = this.state.isLoaded;\r\n\r\n    if (!isLoaded) {\r\n      return <div>data is loading.....</div>;\r\n    } else {\r\n      items = this.filterItems();\r\n      return (\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 col-sm-12 col-lg-12 col-xl-12 col-12\">\r\n            <br />\r\n            <div className=\"form-group\">\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                placeholder=\"Search Category here\"\r\n                value={this.state.search}\r\n                onChange={this.updateSearch.bind(this)}\r\n              />\r\n            </div>\r\n            <h1 style={{ textAlign: 'center' }}>Categories Details</h1>\r\n            {this.state.response.message && (\r\n              <p>{this.state.response.message}</p>\r\n            )}\r\n            <table className=\"table table-strip\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Category Name</th>\r\n                  <th>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {items.map((item) => (\r\n                  <tr key={item.id}>\r\n                    <td>{item.name}</td>\r\n                    <td>\r\n                      <button\r\n                        className=\"btn btn-outline-info btn-small\"\r\n                        onClick={() => this.props.editCategory(item._id)}\r\n                      >\r\n                        Edit\r\n                      </button>\r\n                      {/* &nbsp;&nbsp;<button className='btn btn-danger btn-small' onClick={()=> this.delCategory(item._id)} >Delete</button> */}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nclass EditCategory extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.initialState = {\r\n      name: '',\r\n      _id: '',\r\n    };\r\n    if (props.product) {\r\n      this.state = props.product;\r\n    } else {\r\n      this.state = this.initialState;\r\n    }\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    this.props.onFormSubmit(this.state);\r\n    this.setState(this.initialState);\r\n  }\r\n\r\n  render() {\r\n    let pageTitle;\r\n    if (this.state._id) {\r\n      pageTitle = <h2>Edit Category</h2>;\r\n    } else {\r\n      pageTitle = <h2>Category not Edited</h2>;\r\n    }\r\n    return (\r\n      <div className=\"row\">\r\n      <div className=\"offset-md-2 offset-sm-2 offset-lg-2 offset-xl-2 offset-2 col-md-8 col-sm-8 col-lg-8 col-xl-8 col-8\">\r\n        {pageTitle}\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div className=\"form-group\">\r\n          <label htmlFor='name'>Name : </label>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n            placeholder=\"Category Name\"\r\n          />\r\n            </div>\r\n          <br />\r\n          <input type=\"hidden\" name=\"_id\" value={this.state._id} />\r\n\r\n          <button className=\"btn btn-outline-success btn-block\" type=\"submit\">\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditCategory;\r\n","import React from 'react';\r\nimport CategoryList from './CatagoryGetData';\r\nimport EditCategory from './EditCategory';\r\nimport { toast } from 'react-toastify';\r\nimport { url } from '../../../../constants/index';\r\n\r\nconst token = localStorage.getItem('token');\r\n\r\nexport default class CategoryDetails extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      response: {},\r\n      product: {},\r\n      isEditProduct: false,\r\n      isAddCategory: false,\r\n      isHomeShow: false,\r\n      itemId: '',\r\n    };\r\n    this.onFormSubmit = this.onFormSubmit.bind(this);\r\n  }\r\n\r\n  onCreate() {\r\n    this.setState({\r\n      isAddCategory: true,\r\n      isEditProduct: false,\r\n      isHomeShow: false,\r\n    });\r\n  }\r\n\r\n  onFormSubmit(data) {\r\n    let apiUrl;\r\n    let options;\r\n    if (this.state.isEditProduct) {\r\n      apiUrl = url + '/category/' + this.state.itemId;\r\n      options = {\r\n        method: 'PUT',\r\n        headers: {\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json',\r\n          'access-token': token,\r\n        },\r\n        body: JSON.stringify(data),\r\n      };\r\n    } else {\r\n      apiUrl = url + '/category';\r\n      options = {\r\n        method: 'POST',\r\n        headers: {\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json',\r\n          'access-token': token,\r\n        },\r\n        body: JSON.stringify(data),\r\n      };\r\n    }\r\n    fetch(apiUrl, options)\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          toast.success('Category is updated successfully.');\r\n          this.setState({\r\n            response: result,\r\n            isAddCategory: false,\r\n            isEditProduct: false,\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({ error: error });\r\n        }\r\n      );\r\n  }\r\n\r\n  editCategory = (categoryId) => {\r\n    this.setState({ itemId: categoryId });\r\n    const apiUrl = url + '/category/' + categoryId;\r\n\r\n    const options = {\r\n      method: 'GET',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'access-token': token,\r\n      },\r\n    };\r\n\r\n    fetch(apiUrl, options)\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            product: result.data,\r\n            isAddCategory: false,\r\n            isEditProduct: true,\r\n            isHomeShow: false,\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({ error });\r\n        }\r\n      );\r\n    console.log(categoryId);\r\n  };\r\n\r\n  homeShow() {\r\n    this.setState({\r\n      isAddItem: false,\r\n      isEditProduct: false,\r\n      isHomeShow: true,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"\">\r\n        {this.state.response.status === 'success' && (\r\n          <div>\r\n            <br />\r\n            <p>{this.state.response.message}</p>\r\n          </div>\r\n        )}\r\n        {!this.state.isAddCategory &&\r\n          !this.state.isEditProduct &&\r\n          !this.state.isHomeShow && (\r\n            <CategoryList editCategory={this.editCategory} />\r\n          )}\r\n        {!this.state.isAddCategory &&\r\n          this.state.isEditProduct &&\r\n          !this.state.isHomeShow && (\r\n            <EditCategory\r\n              onFormSubmit={this.onFormSubmit}\r\n              product={this.state.product}\r\n            />\r\n          )}\r\n        {this.state.error && <div>Error: {this.state.error.message}</div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { addCategory } from './action';\r\nimport { connect } from 'react-redux';\r\n\r\nclass AddCategory extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.initialState = {\r\n      name: '',\r\n    };\r\n\r\n    this.state = this.initialState;\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    const token = localStorage.getItem('token');\r\n    const data = {\r\n      ...this.state,\r\n      'access-token': token,\r\n    };\r\n    this.props.addCategory(data);\r\n    this.setState(this.initialState);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"offset-md-2 offset-sm-2 offset-lg-2 offset-xl-2 offset-2 col-md-8 col-sm-8 col-lg-8 col-xl-8 col-8\">\r\n          <h2 className=\"mt-2 mb-2\">Add Category</h2>\r\n          <form onSubmit={this.handleSubmit}>\r\n            <div className=\"form-group\">\r\n              <label>Name : </label>\r\n              <input\r\n                required\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={this.state.name}\r\n                onChange={this.handleChange}\r\n                placeholder=\"Category Name\"\r\n              />\r\n            </div>\r\n            <br />\r\n\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">\r\n              <i class=\"fa fa-check\">&nbsp; </i> Save\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { addCategory })(AddCategory);\r\n","import { apiCategory, categoryTypes } from '../../../../constants/index';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport const addCategory = (data) => async (dispatch) => {\r\n  const token = localStorage.getItem('token');\r\n\r\n  const response = await axios\r\n    .post(apiCategory.base_url, data, {\r\n      headers: {\r\n        'access-token': token,\r\n      },\r\n    })\r\n    .then((res) => toast.success('Category is added successfully.'))\r\n    .catch((error) => toast.error('error', error));\r\n};\r\n","import React, { Component } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { url } from '../../../../constants/index';\r\nconst token = localStorage.getItem('token');\r\n\r\nexport default class TableGetData extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      items: [],\r\n      isLoaded: false,\r\n      response: {},\r\n      search: '',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const apiUrl = url + '/table';\r\n\r\n    const options = {\r\n      method: 'GET',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'access-token': token,\r\n      },\r\n    };\r\n\r\n    return fetch(apiUrl, options)\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            items: result.data,\r\n            isLoaded: true,\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({ error });\r\n        }\r\n      );\r\n  }\r\n\r\n  delCategory(itemId) {\r\n    const { items } = this.state;\r\n\r\n    const apiUrl = url + '/table/' + itemId;\r\n    const formData = new FormData();\r\n    formData.append('itemId', itemId);\r\n\r\n    const options = {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'access-token': token,\r\n      },\r\n      body: formData,\r\n    };\r\n    fetch(apiUrl, options)\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          toast.success('Table is deleted successfully.');\r\n\r\n          this.setState({\r\n            response: result,\r\n            items: items.filter((item) => item._id !== itemId),\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({ error });\r\n        }\r\n      );\r\n  }\r\n\r\n  updateSearch(event) {\r\n    this.setState({\r\n      search: event.target.value.substr(0, 20),\r\n    });\r\n  }\r\n\r\n  filterItems = () => {\r\n    if (this.state.items.length > 0) {\r\n      return this.state.items.filter((item) => {\r\n        return (\r\n          item.tableNo\r\n            .toLowerCase()\r\n            .indexOf(this.state.search.toLowerCase()) !== -1\r\n        );\r\n      });\r\n    } else {\r\n      return [];\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let items;\r\n\r\n    let isLoaded = this.state.isLoaded;\r\n\r\n    if (!isLoaded) {\r\n      return <div>data is loading.....</div>;\r\n    } else {\r\n      items = this.filterItems();\r\n      return (\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 col-sm-12 col-lg-12 col-xl-12 col-12\">\r\n            <br />\r\n            <div className=\"form-group\">\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                placeholder=\"Search Table No here\"\r\n                value={this.state.search}\r\n                onChange={this.updateSearch.bind(this)}\r\n              />\r\n            </div>\r\n            <h1 style={{ textAlign: 'center' }}>Tables Details</h1>\r\n            {this.state.response.message && (\r\n              <p>{this.state.response.message}</p>\r\n            )}\r\n            <table className=\"table table-strip\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Table # </th>\r\n                  <th>Size </th>\r\n                  <th>Hall # </th>\r\n                  <th>CheckIn Code </th>\r\n                  <th>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {items.map((item) => (\r\n                  <tr key={item.id}>\r\n                    <td>{item.tableNo}</td>\r\n                    <td>{item.size}</td>\r\n                    <td>{item.hallNo} </td>\r\n                    <td>{item.checkInCode}</td>\r\n                    <td>\r\n                      <button\r\n                        className=\"btn btn-outline-info btn-small\"\r\n                        onClick={() => this.props.editCategory(item._id)}\r\n                      >\r\n                        Edit\r\n                      </button>\r\n                      &nbsp;&nbsp;\r\n                      <button\r\n                        className=\"btn btn-danger btn-small\"\r\n                        onClick={() => this.delCategory(item._id)}\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class EditTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.initialState = {\r\n            tableNo: '',\r\n            size: '',\r\n            hallNo: '',\r\n            checkInCode: '',\r\n            _id: '',\r\n        };\r\n        if (props.product) {\r\n          this.state = props.product;\r\n        } else {\r\n          this.state = this.initialState;\r\n        }\r\n    \r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n      }\r\n    \r\n      handleChange(event) {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n    \r\n        this.setState({\r\n          [name]: value,\r\n        });\r\n      }\r\n    \r\n      handleSubmit(event) {\r\n        event.preventDefault();\r\n        this.props.onFormSubmit(this.state);\r\n        this.setState(this.initialState);\r\n      }\r\n    \r\n      render() {\r\n        let pageTitle;\r\n        if (this.state._id) {\r\n          pageTitle = <h2>Edit Category</h2>;\r\n        } else {\r\n          pageTitle = <h2>Category not Edited</h2>;\r\n        }\r\n        return (\r\n          <div className=\"row\">\r\n          <div className=\"offset-md-2 offset-sm-2 offset-lg-2 offset-xl-2 offset-2 col-md-8 col-sm-8 col-lg-8 col-xl-8 col-8\">\r\n            {pageTitle}\r\n            <form onSubmit={this.handleSubmit}>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"Number\">Table # : </label>\r\n                <input\r\n                  required\r\n                  className=\"form-control\"\r\n                  type=\"number\"\r\n                  name=\"tableNo\"\r\n                  value={this.state.tableNo}\r\n                  onChange={this.handleChange}\r\n                  placeholder=\"Table No.\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"Size\">Size : </label>\r\n                <input\r\n                  required\r\n                  className=\"form-control\"\r\n                  type=\"number\"\r\n                  name=\"size\"\r\n                  value={this.state.size}\r\n                  onChange={this.handleChange}\r\n                  placeholder=\"No. of Chairs\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor='checkInCode'>CheckIn Code : </label>\r\n                <input\r\n                  required\r\n                  className=\"form-control\"\r\n                  type=\"number\"\r\n                  name=\"checkInCode\"\r\n                  value={this.state.checkInCode}\r\n                  onChange={this.handleChange}\r\n                  placeholder=\"Check In Code\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"hallNo\">Hall No : </label>\r\n                <input\r\n                  required\r\n                  className=\"form-control\"\r\n                  type=\"number\"\r\n                  name=\"hallNo\"\r\n                  value={this.state.hallNo}\r\n                  onChange={this.handleChange}\r\n                  placeholder=\"Hall number here\"\r\n                />\r\n              </div>\r\n    \r\n              <br />\r\n              <input type=\"hidden\" name=\"_id\" value={this.state._id} />\r\n    \r\n              <button className=\"btn btn-outline-success btn-block\" type=\"submit\">\r\n                Submit\r\n              </button>\r\n            </form>\r\n          </div>\r\n          </div>\r\n        );\r\n      }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport { url } from '../../../../constants/index';\r\nimport TableList from './TableGetData';\r\nimport EditTable from './EditTable';\r\n\r\nconst token = localStorage.getItem('token');\r\n\r\nclass tableDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      response: {},\r\n      product: {},\r\n      isEditProduct: false,\r\n      isAddCategory: false,\r\n      isHomeShow: false,\r\n      itemId: '',\r\n    };\r\n    this.onFormSubmit = this.onFormSubmit.bind(this);\r\n  }\r\n\r\n  onCreate() {\r\n    this.setState({\r\n      isAddCategory: true,\r\n      isEditProduct: false,\r\n      isHomeShow: false,\r\n    });\r\n  }\r\n\r\n  onFormSubmit(data) {\r\n    let apiUrl;\r\n    let options;\r\n    if (this.state.isEditProduct) {\r\n      apiUrl = url + '/table/' + this.state.itemId;\r\n      options = {\r\n        method: 'PUT',\r\n        headers: {\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json',\r\n          'access-token': token,\r\n        },\r\n        body: JSON.stringify(data),\r\n      };\r\n    } else {\r\n      apiUrl = url + '/table';\r\n      options = {\r\n        method: 'POST',\r\n        headers: {\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json',\r\n          'access-token': token,\r\n        },\r\n        body: JSON.stringify(data),\r\n      };\r\n    }\r\n    fetch(apiUrl, options)\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          toast.success('Table is updated successfully.');\r\n\r\n          this.setState({\r\n            response: result,\r\n            isAddCategory: false,\r\n            isEditProduct: false,\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({ error: error });\r\n        }\r\n      );\r\n  }\r\n\r\n  editCategory = (categoryId) => {\r\n    this.setState({ itemId: categoryId });\r\n    const apiUrl = url + '/table/' + categoryId;\r\n\r\n    const options = {\r\n      method: 'GET',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'access-token': token,\r\n      },\r\n    };\r\n\r\n    fetch(apiUrl, options)\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            product: result.data,\r\n            isAddCategory: false,\r\n            isEditProduct: true,\r\n            isHomeShow: false,\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({ error });\r\n        }\r\n      );\r\n    console.log(categoryId);\r\n  };\r\n\r\n  homeShow() {\r\n    this.setState({\r\n      isAddItem: false,\r\n      isEditProduct: false,\r\n      isHomeShow: true,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"\">\r\n        {this.state.response.status === 'success' && (\r\n          <div>\r\n            <br />\r\n            <p>{this.state.response.message}</p>\r\n          </div>\r\n        )}\r\n        {!this.state.isAddCategory &&\r\n          !this.state.isEditProduct &&\r\n          !this.state.isHomeShow && (\r\n            <TableList editCategory={this.editCategory} />\r\n          )}\r\n        {!this.state.isAddCategory &&\r\n          this.state.isEditProduct &&\r\n          !this.state.isHomeShow && (\r\n            <EditTable\r\n              onFormSubmit={this.onFormSubmit}\r\n              product={this.state.product}\r\n            />\r\n          )}\r\n        {this.state.error && <div>Error: {this.state.error.message}</div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default tableDetails;\r\n","import React, { Component } from 'react';\r\nimport { addTable } from './action';\r\nimport { connect } from 'react-redux';\r\n\r\nclass AddTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.initialState = {\r\n      tableNo: '',\r\n      size: '',\r\n      hallNo: '',\r\n      checkInCode: '',\r\n    };\r\n\r\n    this.state = this.initialState;\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    this.props.addTable(this.state);\r\n    this.setState(this.initialState);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"offset-md-2 offset-sm-2 offset-lg-2 offset-xl-2 offset-2 col-md-8 col-sm-8 col-lg-8 col-xl-8 col-8\">\r\n          <h2>Add Table</h2>\r\n          <form onSubmit={this.handleSubmit}>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"Number\">Table No. : </label>\r\n              <input\r\n                required\r\n                className=\"form-control\"\r\n                type=\"number\"\r\n                name=\"tableNo\"\r\n                value={this.state.tableNo}\r\n                onChange={this.handleChange}\r\n                placeholder=\"Table No.\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"Size\">Size : </label>\r\n              <input\r\n                required\r\n                className=\"form-control\"\r\n                type=\"number\"\r\n                name=\"size\"\r\n                value={this.state.size}\r\n                onChange={this.handleChange}\r\n                placeholder=\"No. of Chairs\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"checkInCode\">CheckIn Code : </label>\r\n              <input\r\n                required\r\n                className=\"form-control\"\r\n                type=\"number\"\r\n                name=\"checkInCode\"\r\n                value={this.state.checkInCode}\r\n                onChange={this.handleChange}\r\n                placeholder=\"Check In Code\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"hallNo\">Hall No. : </label>\r\n              <input\r\n                required\r\n                className=\"form-control\"\r\n                type=\"number\"\r\n                name=\"hallNo\"\r\n                value={this.state.hallNo}\r\n                onChange={this.handleChange}\r\n                placeholder=\"Hall number here\"\r\n              />\r\n            </div>\r\n\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">\r\n              <i class=\"fa fa-check\">&nbsp; </i>Save\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { addTable })(AddTable);\r\n","import { apiTable, categoryTypes } from '../../../../constants/index';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport const addTable = (data) => async (dispatch) => {\r\n  const token = localStorage.getItem('token');\r\n\r\n  const response = await axios\r\n    .post(apiTable.base_url, data, {\r\n      headers: {\r\n        'access-token': token,\r\n      },\r\n    })\r\n    .then((res) => toast.success('Table is added successfully.'))\r\n    .catch((error) => toast.error('error', error));\r\n};\r\n","import React, { Component } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { actionGetStaffUser, actionDeleteStaffUser } from './Store/action';\r\nimport { connect } from 'react-redux';\r\n\r\nclass StaffDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.initialState = {\r\n      staff: [\r\n        {\r\n          id: 1,\r\n          name: 'test',\r\n          email: 'test@test.com',\r\n          password: 'password',\r\n        },\r\n      ],\r\n    };\r\n\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  componentDidMount() {\r\n    const res = this.props.actionGetStaffUser();\r\n  }\r\n\r\n  editUser = (user) => {\r\n    this.props.history.push(this.props.match.url + '/edit', user);\r\n  };\r\n  deleteUser = async (id) => {\r\n    const res = await this.props.actionDeleteStaffUser(id);\r\n\r\n    toast.success('User is deleted successfully.');\r\n  };\r\n\r\n  render() {\r\n    const { staffUser } = this.props;\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12 col-sm-12 col-lg-12 col-xl-12 col-12\">\r\n          <br />\r\n          {/* <div className=\"form-group\">\r\n        <input\r\n          className=\"form-control\"\r\n          type=\"text\"\r\n          placeholder=\"Search Item here\"\r\n          value={this.state.search}\r\n          onChange={this.updateSearch.bind(this)}\r\n        />\r\n      </div> */}\r\n\r\n          <h1 style={{ textAlign: 'center' }}>Staff Details</h1>\r\n\r\n          <table className=\"table table-strip\">\r\n            <thead>\r\n              <tr>\r\n                <th>Admin</th>\r\n                <th>Name</th>\r\n                <th>Email</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {staffUser?.map((user) => (\r\n                <tr key={user.id}>\r\n                  <td>{user.isAdmin ? 'Admin' : 'Staff'}</td>\r\n                  <td>{user?.name}</td>\r\n                  <td>{user?.email}</td>\r\n                  <td>\r\n                    <button\r\n                      className=\"btn btn-outline-info btn-small mr-1\"\r\n                      onClick={() => this.editUser(user)}\r\n                    >\r\n                      Edit\r\n                    </button>\r\n                    <button\r\n                      className=\"btn btn-outline-danger btn-small\"\r\n                      onClick={() => this.deleteUser(user._id)}\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ getStaffUsersReducer }) => {\r\n  return {\r\n    staffUser: getStaffUsersReducer.staffUser,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, {\r\n  actionGetStaffUser,\r\n  actionDeleteStaffUser,\r\n})(StaffDetails);\r\n","import React, { Component } from 'react';\r\nimport { addStaffUser } from './Store/action';\r\nimport { connect } from 'react-redux';\r\n\r\nclass AddStaff extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.initialState = {\r\n      name: '',\r\n      password: '',\r\n      email: '',\r\n      isAdmin: false,\r\n    };\r\n    this.state = this.initialState;\r\n  }\r\n  handleChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.name === 'isAdmin' ? target.checked : target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const formData = this.state;\r\n    const res = this.props.addStaffUser(formData);\r\n    if (!res.error) {\r\n      this.setState(this.initialState);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { name, email, password, isAdmin } = this.state;\r\n\r\n    return (\r\n      <div className=\"Container row\">\r\n        <div className=\"offset-md-2 offset-sm-2 offset-lg-2 offset-xl-2 offset-2 col-md-8 col-sm-8 col-lg-8 col-xl-8 col-8\">\r\n          <h2>Add User</h2>\r\n          <form onSubmit={this.handleSubmit}>\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"isAdmin\"\r\n              checked={isAdmin}\r\n              onChange={this.handleChange}\r\n            />\r\n            <label>&nbsp; Admin </label>\r\n            <div className=\"form-group\">\r\n              <label>Name : </label>\r\n              <input\r\n                required\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={name}\r\n                onChange={this.handleChange}\r\n                placeholder=\"Staff User Name\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <br />\r\n              <label>Email : </label>\r\n              <input\r\n                required\r\n                className=\"form-control\"\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={email}\r\n                onChange={this.handleChange}\r\n                placeholder=\"Email\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <br />\r\n              <label>Password : </label>\r\n              <input\r\n                required\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                name=\"password\"\r\n                maxLength=\"14\"\r\n                value={password}\r\n                onChange={this.handleChange}\r\n                placeholder=\"Password\"\r\n              />\r\n            </div>\r\n\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">\r\n              <i class=\"fa fa-check\">&nbsp; </i> Save\r\n            </button>\r\n            <br />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { addStaffUser })(AddStaff);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { updateStaffUser } from './Store/action';\r\nclass EditStaff extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: '',\r\n      name: '',\r\n      password: '',\r\n      email: '',\r\n      isAdmin: '',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { state } = this.props.location;\r\n    debugger;\r\n    this.setState({\r\n      id: state._id,\r\n      name: state.name,\r\n      password: state.password,\r\n      email: state.email,\r\n      isAdmin: state.isAdmin,\r\n    });\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const formData = {\r\n      name: this.state.name,\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      isAdmin: this.state.isAdmin,\r\n    };\r\n    const res = this.props.updateStaffUser(this.state.id, formData);\r\n    debugger;\r\n    const { history } = this.props;\r\n    if (!res.error) {\r\n      this.setState(this.initialState);\r\n      this.props.history.goBack();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { name, email, password, isAdmin } = this.state;\r\n    debugger;\r\n    return (\r\n      <div className=\"Container row\">\r\n        <div className=\"offset-md-2 offset-sm-2 offset-lg-2 offset-xl-2 offset-2 col-md-8 col-sm-8 col-lg-8 col-xl-8 col-8\">\r\n          <h2>Edit User</h2>\r\n          <form onSubmit={this.handleSubmit}>\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"isAdmin\"\r\n              value={isAdmin}\r\n              onChange={this.handleChange}\r\n              checked={this.state?.isAdmin}\r\n            />\r\n            <label>&nbsp; Admin </label>\r\n            <div className=\"form-group\">\r\n              <label>Name : </label>\r\n              <input\r\n                required\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={name}\r\n                onChange={this.handleChange}\r\n                placeholder=\"Staff User Name\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <br />\r\n              <label>Email : </label>\r\n              <input\r\n                required\r\n                className=\"form-control\"\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={email}\r\n                onChange={this.handleChange}\r\n                placeholder=\"Email\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <br />\r\n              <label>Password : </label>\r\n              <input\r\n                required\r\n                className=\"form-control\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                maxLength=\"14\"\r\n                value={password}\r\n                onChange={this.handleChange}\r\n                placeholder=\"Password\"\r\n              />\r\n            </div>\r\n\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">\r\n              <i class=\"fa fa-check\">&nbsp; </i> Save\r\n            </button>\r\n            <br />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { updateStaffUser })(EditStaff);\r\n","import React, { Component, Fragment } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { url } from '../../../../constants/index';\r\n\r\nexport default class AllOrders extends Component {\r\n  state = {\r\n    isLoaded: false,\r\n    orders: [],\r\n    isOrder: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const apiUrl = url + '/order';\r\n    const token = localStorage.getItem('token');\r\n\r\n    const options = {\r\n      method: 'GET',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'access-token': token,\r\n      },\r\n    };\r\n\r\n    return fetch(apiUrl, options)\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        if (!result.error) {\r\n          this.setState({\r\n            isLoaded: true,\r\n            orders: result.data,\r\n          });\r\n        } else {\r\n          alert('Error is Found');\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.isLoaded) {\r\n      return (\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12 col-sm-12 col-lg-12 col-xl-12 col-12\">\r\n              <h1 className=\"text-center p-1\">All Orders</h1>\r\n              <table className=\"table table-strip\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Status</th>\r\n                    <th>Date</th>\r\n                    <th>Table Details</th>\r\n                    <th>Items Details</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {this.state?.orders?.map((order) => (\r\n                    <tr key={order._id}>\r\n                      <td style={{ color: 'red' }}>\r\n                        <b>{order?.status.toUpperCase()}</b>\r\n                      </td>\r\n                      <td>{order?.dateTime}</td>\r\n                      <td>\r\n                        <ul>\r\n                          <li>\r\n                            <b>Hall # </b> {order?.checkIn?.table?.hallNo}\r\n                          </li>\r\n                          <li>\r\n                            <b>Table # </b> {order?.checkIn?.table?.tableNo}\r\n                          </li>\r\n                        </ul>\r\n                      </td>\r\n                      <td>\r\n                        {order?.orderDetail?.map((items) => (\r\n                          <ul key={items._id}>\r\n                            <li>\r\n                              <b>Name : </b>\r\n                              {items?.item?.name}\r\n                            </li>\r\n                            <li>\r\n                              <b>Quantity :</b> {items?.quantity}\r\n                            </li>\r\n                          </ul>\r\n                        ))}\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <h1>Data is loading......</h1>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { url } from '../../../../constants/index';\r\n\r\nclass PendingOrder extends Component {\r\n  state = {\r\n    isLoaded: false,\r\n    orders: [],\r\n    isVerify: false,\r\n    isHome: false,\r\n    approved: {},\r\n  };\r\n\r\n  componentDidMount() {\r\n    const apiUrl = url + '/order?status=pending';\r\n    const token = localStorage.getItem('token');\r\n\r\n    const options = {\r\n      method: 'GET',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'access-token': token,\r\n      },\r\n    };\r\n\r\n    return fetch(apiUrl, options)\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        if (!result.error) {\r\n          this.setState({\r\n            isLoaded: true,\r\n            orders: result.data,\r\n          });\r\n        } else {\r\n          alert('Error is Found');\r\n        }\r\n      });\r\n  }\r\n\r\n  orderApproved = (orderId) => {\r\n    const apiUrl = url + '/order/' + orderId;\r\n    const token = localStorage.getItem('token');\r\n\r\n    const data = {\r\n      status: 'approved',\r\n    };\r\n\r\n    const options = {\r\n      method: 'PUT',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'access-token': token,\r\n      },\r\n      body: JSON.stringify(data),\r\n    };\r\n\r\n    return fetch(apiUrl, options)\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        if (!result.error) {\r\n          this.setState({\r\n            approved: result.data,\r\n          });\r\n          toast.success('Order is updated successfully.');\r\n        } else {\r\n          alert('Error is Found');\r\n        }\r\n      });\r\n  };\r\n\r\n  homeShow = () => {\r\n    this.setState({\r\n      isVerify: false,\r\n      isHome: true,\r\n    });\r\n  };\r\n  VerifyShow = () => {\r\n    this.setState({\r\n      isVerify: true,\r\n      isHome: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.isLoaded) {\r\n      return (\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12 col-sm-12 col-lg-12 col-xl-12 col-12\">\r\n              <h1 style={{ textAlign: 'center' }}>Pending Orders</h1>\r\n\r\n              <table className=\"table table-strip\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Status</th>\r\n                    <th>Date</th>\r\n                    <th>Table Details</th>\r\n                    <th>Items Details</th>\r\n                    <th>Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {this.state.orders?.map((order) => (\r\n                    <tr key={order._id}>\r\n                      <td style={{ color: 'red' }}>\r\n                        <b>{order?.status?.toUpperCase()}</b>\r\n                      </td>\r\n                      <td>{order?.dateTime}</td>\r\n                      <td>\r\n                        <ul>\r\n                          <li>\r\n                            <b>Hall # </b> {order?.checkIn?.table?.hallNo}{' '}\r\n                          </li>\r\n                          <li>\r\n                            <b>Table # </b> {order?.checkIn?.table?.tableNo}{' '}\r\n                          </li>\r\n                        </ul>\r\n                      </td>\r\n                      <td>\r\n                        {order?.orderDetail?.map((items) => (\r\n                          <ul key={items._id}>\r\n                            <li>\r\n                              <b>Name : </b>\r\n                              {items?.item?.name}{' '}\r\n                            </li>\r\n                            <li>\r\n                              <b>Quantity :</b> {items?.quantity}{' '}\r\n                            </li>\r\n                          </ul>\r\n                        ))}\r\n                      </td>\r\n                      <td>\r\n                        <button\r\n                          className=\"btn btn-outline-success btn-small\"\r\n                          onClick={() => this.orderApproved(order._id)}\r\n                        >\r\n                          Approve\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <h1>Data is loading......</h1>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default PendingOrder;\r\n","import React, { Component, Fragment } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { url } from '../../../../constants/index';\r\n\r\nexport default class VerifiedOrder extends Component {\r\n  state = {\r\n    isLoaded: false,\r\n    orders: [],\r\n    isOrder: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const apiUrl = url + '/order?status=approved';\r\n    const token = localStorage.getItem('token');\r\n\r\n    const options = {\r\n      method: 'GET',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'access-token': token,\r\n      },\r\n    };\r\n\r\n    return fetch(apiUrl, options)\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        if (!result.error) {\r\n          this.setState({\r\n            isLoaded: true,\r\n            orders: result.data,\r\n          });\r\n        } else {\r\n          alert('Error is Found');\r\n        }\r\n      });\r\n  }\r\n\r\n  orderInProgress = (orderId) => {\r\n    const apiUrl = url + '/order/' + orderId;\r\n    const token = localStorage.getItem('token');\r\n\r\n    const data = {\r\n      status: 'in-progress',\r\n    };\r\n\r\n    const options = {\r\n      method: 'PUT',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'access-token': token,\r\n      },\r\n      body: JSON.stringify(data),\r\n    };\r\n\r\n    return fetch(apiUrl, options)\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        if (!result.error) {\r\n          this.setState({\r\n            approved: result.data,\r\n          });\r\n          toast.success('Order is updated successfully.');\r\n        } else {\r\n          alert('Error is Found');\r\n        }\r\n      });\r\n  };\r\n\r\n  OrderShow = () => {\r\n    this.setState({\r\n      isOrder: true,\r\n    });\r\n  };\r\n  render() {\r\n    if (this.state.isLoaded) {\r\n      return (\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12 col-sm-12 col-lg-12 col-xl-12 col-12\">\r\n              <h1 className=\"text-center p-1\">Approved Orders</h1>\r\n              <table className=\"table table-strip\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Status</th>\r\n                    <th>Date</th>\r\n                    <th>Table Details</th>\r\n                    <th>Items Details</th>\r\n                    <th>Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {this.state?.orders?.map((order) => (\r\n                    <tr key={order._id}>\r\n                      <td style={{ color: 'red' }}>\r\n                        <b>{order?.status.toUpperCase()}</b>\r\n                      </td>\r\n                      <td>{order?.dateTime}</td>\r\n                      <td>\r\n                        <ul>\r\n                          <li>\r\n                            <b>Hall # </b> {order?.checkIn?.table?.hallNo}\r\n                          </li>\r\n                          <li>\r\n                            <b>Table # </b> {order?.checkIn?.table?.tableNo}\r\n                          </li>\r\n                        </ul>\r\n                      </td>\r\n                      <td>\r\n                        {order?.orderDetail?.map((items) => (\r\n                          <ul key={items._id}>\r\n                            <li>\r\n                              <b>Name : </b>\r\n                              {items?.item?.name}\r\n                            </li>\r\n                            <li>\r\n                              <b>Quantity :</b> {items?.quantity}\r\n                            </li>\r\n                          </ul>\r\n                        ))}\r\n                      </td>\r\n                      <td>\r\n                        <button\r\n                          className=\"btn btn-outline-success btn-small\"\r\n                          onClick={() => this.orderInProgress(order._id)}\r\n                        >\r\n                          In Prograss\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <h1>Data is loading......</h1>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { actionGetPendingBills, updateBillStatus } from './store/action';\r\nimport { connect } from 'react-redux';\r\n\r\nclass PendingBills extends Component {\r\n  state = {\r\n    search: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.actionGetPendingBills();\r\n  }\r\n\r\n  updateSearch(event) {\r\n    this.setState({\r\n      search: event.target.value.substr(0, 20),\r\n    });\r\n  }\r\n\r\n  filterItems = () => {\r\n    if (this.props?.pendingBills?.length > 0) {\r\n      return this.props.pendingBills?.filter((item) => {\r\n        return (\r\n          item.amount.toLowerCase().indexOf(this.state.search.toLowerCase()) !==\r\n          -1\r\n        );\r\n      });\r\n    } else {\r\n      return [];\r\n    }\r\n  };\r\n\r\n  updateBill = (id) => {\r\n    const data = {\r\n      status: 'paid',\r\n    };\r\n    debugger;\r\n    this.props.updateBillStatus(id, data);\r\n  };\r\n\r\n  render() {\r\n    let pendingBill = this.filterItems();\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12 col-sm-12 col-lg-12 col-xl-12 col-12\">\r\n          <br />\r\n          <div className=\"form-group\">\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              placeholder=\"Search bill by amount here\"\r\n              value={this.state.search}\r\n              onChange={this.updateSearch.bind(this)}\r\n            />\r\n          </div>\r\n          <h1 style={{ textAlign: 'center' }}>Pending Bills</h1>\r\n          <table className=\"table table-strip\">\r\n            <thead>\r\n              <tr>\r\n                <th>Status </th>\r\n                <th>Payment Type </th>\r\n                <th>CheckIn Code </th>\r\n                <th>Table #</th>\r\n                <th>Amount</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {pendingBill?.map((order) => (\r\n                <tr key={order.id}>\r\n                  <td style={{ color: 'red' }}>\r\n                    <b>{order?.status.toUpperCase()}</b>\r\n                  </td>\r\n                  <td>{order?.paymentType}</td>\r\n                  <td>{order?.checkIn?.table?.checkInCode}</td>\r\n                  <td>{order?.checkIn?.table?.tableNo}</td>\r\n                  <td>{order?.amount} </td>\r\n                  <td>\r\n                    <button\r\n                      className=\"btn btn-outline-primary\"\r\n                      onClick={() => this.updateBill(order._id)}\r\n                    >\r\n                      Paid\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = ({ getPendingBillsReducer }) => {\r\n  return {\r\n    pendingBills: getPendingBillsReducer.pendingBills,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  actionGetPendingBills,\r\n  updateBillStatus,\r\n})(PendingBills);\r\n","import React, { Component, Fragment } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { url } from '../../../../constants/index';\r\n\r\nexport default class InProgressOrder extends Component {\r\n  state = {\r\n    isLoaded: false,\r\n    orders: [],\r\n    isOrder: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const apiUrl = url + '/order?status=in-progress';\r\n    const token = localStorage.getItem('token');\r\n\r\n    const options = {\r\n      method: 'GET',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'access-token': token,\r\n      },\r\n    };\r\n\r\n    return fetch(apiUrl, options)\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        if (!result.error) {\r\n          this.setState({\r\n            isLoaded: true,\r\n            orders: result.data,\r\n          });\r\n        } else {\r\n          alert('Error is Found');\r\n        }\r\n      });\r\n  }\r\n\r\n  orderCompleted = (orderId) => {\r\n    const apiUrl = url + '/order/' + orderId;\r\n    const token = localStorage.getItem('token');\r\n\r\n    const data = {\r\n      status: 'completed',\r\n    };\r\n\r\n    const options = {\r\n      method: 'PUT',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'access-token': token,\r\n      },\r\n      body: JSON.stringify(data),\r\n    };\r\n\r\n    return fetch(apiUrl, options)\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        if (!result.error) {\r\n          this.setState({\r\n            approved: result.data,\r\n          });\r\n          toast.success('Order is updated successfully.');\r\n        } else {\r\n          alert('Error is Found');\r\n        }\r\n      });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.isLoaded) {\r\n      return (\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12 col-sm-12 col-lg-12 col-xl-12 col-12\">\r\n              <h1 className=\"text-center p-1\">In Progress Orders</h1>\r\n              <table className=\"table table-strip\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Status</th>\r\n                    <th>Date</th>\r\n                    <th>Table Details</th>\r\n                    <th>Items Details</th>\r\n                    <th>Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {this.state?.orders?.map((order) => (\r\n                    <tr key={order._id}>\r\n                      <td style={{ color: 'red' }}>\r\n                        <b>{order?.status.toUpperCase()}</b>\r\n                      </td>\r\n                      <td>{order?.dateTime}</td>\r\n                      <td>\r\n                        <ul>\r\n                          <li>\r\n                            <b>Hall # </b> {order?.checkIn?.table?.hallNo}\r\n                          </li>\r\n                          <li>\r\n                            <b>Table # </b> {order?.checkIn?.table?.tableNo}\r\n                          </li>\r\n                        </ul>\r\n                      </td>\r\n                      <td>\r\n                        {order?.orderDetail?.map((items) => (\r\n                          <ul key={items._id}>\r\n                            <li>\r\n                              <b>Name : </b>\r\n                              {items?.item?.name}\r\n                            </li>\r\n                            <li>\r\n                              <b>Quantity :</b> {items?.quantity}\r\n                            </li>\r\n                          </ul>\r\n                        ))}\r\n                      </td>\r\n                      <td>\r\n                        <button\r\n                          className=\"btn btn-outline-success btn-small\"\r\n                          onClick={() => this.orderCompleted(order?._id)}\r\n                        >\r\n                          Complete\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <h1>Data is loading......</h1>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n","import React, { Component, Fragment } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { url } from '../../../../constants/index';\r\n\r\nexport default class CompletedOrder extends Component {\r\n  state = {\r\n    isLoaded: false,\r\n    orders: [],\r\n    isOrder: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const apiUrl = url + '/order?status=completed';\r\n    const token = localStorage.getItem('token');\r\n\r\n    const options = {\r\n      method: 'GET',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'access-token': token,\r\n      },\r\n    };\r\n\r\n    return fetch(apiUrl, options)\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        if (!result.error) {\r\n          this.setState({\r\n            isLoaded: true,\r\n            orders: result.data,\r\n          });\r\n        } else {\r\n          alert('Error is Found');\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.isLoaded) {\r\n      return (\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12 col-sm-12 col-lg-12 col-xl-12 col-12\">\r\n              <h1 className=\"text-center p-1\">Completed Orders</h1>\r\n              <table className=\"table table-strip\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Status</th>\r\n                    <th>Date</th>\r\n                    <th>Table Details</th>\r\n                    <th>Items Details</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {this.state?.orders?.map((order) => (\r\n                    <tr key={order._id}>\r\n                      <td style={{ color: 'red' }}>\r\n                        <b>{order?.status.toUpperCase()}</b>\r\n                      </td>\r\n                      <td>{order?.dateTime}</td>\r\n                      <td>\r\n                        <ul>\r\n                          <li>\r\n                            <b>Hall # </b> {order?.checkIn?.table?.hallNo}\r\n                          </li>\r\n                          <li>\r\n                            <b>Table # </b> {order?.checkIn?.table?.tableNo}\r\n                          </li>\r\n                        </ul>\r\n                      </td>\r\n                      <td>\r\n                        {order?.orderDetail?.map((items) => (\r\n                          <ul key={items._id}>\r\n                            <li>\r\n                              <b>Name : </b>\r\n                              {items?.item?.name}\r\n                            </li>\r\n                            <li>\r\n                              <b>Quantity :</b> {items?.quantity}\r\n                            </li>\r\n                          </ul>\r\n                        ))}\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <h1>Data is loading......</h1>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { actionGetPaidBills } from './store/action';\r\nimport { connect } from 'react-redux';\r\n\r\nclass PaidBills extends Component {\r\n  state = {\r\n    search: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.actionGetPaidBills();\r\n  }\r\n\r\n  updateSearch(event) {\r\n    this.setState({\r\n      search: event.target.value.substr(0, 20),\r\n    });\r\n  }\r\n\r\n  filterItems = () => {\r\n    if (this.props?.paidBills?.length > 0) {\r\n      return this.props.paidBills?.filter((item) => {\r\n        return (\r\n          item.amount.toLowerCase().indexOf(this.state.search.toLowerCase()) !==\r\n          -1\r\n        );\r\n      });\r\n    } else {\r\n      return [];\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let paidBill = this.filterItems();\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12 col-sm-12 col-lg-12 col-xl-12 col-12\">\r\n          <br />\r\n          <div className=\"form-group\">\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              placeholder=\"Search bill by amount here\"\r\n              value={this.state?.search}\r\n              onChange={this.updateSearch.bind(this)}\r\n            />\r\n          </div>\r\n          <h1 style={{ textAlign: 'center' }}>Paid Bills</h1>\r\n          <table className=\"table table-strip\">\r\n            <thead>\r\n              <tr>\r\n                <th>Status </th>\r\n                <th>Payment Type </th>\r\n                <th>CheckIn Code </th>\r\n                <th>Table #</th>\r\n                <th>Amount</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {paidBill?.map((order) => (\r\n                <tr key={order?.id}>\r\n                  <td style={{ color: 'red' }}>\r\n                    <b>{order?.status.toUpperCase()}</b>\r\n                  </td>\r\n                  <td>{order?.paymentType}</td>\r\n                  <td>{order?.checkIn?.table?.checkInCode}</td>\r\n                  <td>{order?.checkIn?.table?.tableNo}</td>\r\n                  <td>{order?.amount} </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = ({ getPaidBillsReducer }) => {\r\n  return {\r\n    paidBills: getPaidBillsReducer.paidBills,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { actionGetPaidBills })(PaidBills);\r\n","import React, { Component } from 'react';\r\nimport { actionGetAlldBills } from './store/action';\r\nimport { connect } from 'react-redux';\r\n\r\nclass AllBills extends Component {\r\n  state = {\r\n    search: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.actionGetAlldBills();\r\n  }\r\n\r\n  updateSearch(event) {\r\n    this.setState({\r\n      search: event.target.value.substr(0, 20),\r\n    });\r\n  }\r\n\r\n  filterItems = () => {\r\n    if (this.props?.allBills?.length > 0) {\r\n      return this.props.allBills?.filter((item) => {\r\n        return (\r\n          item.amount.toLowerCase().indexOf(this.state.search.toLowerCase()) !==\r\n          -1\r\n        );\r\n      });\r\n    } else {\r\n      return [];\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let allBill = this.filterItems();\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12 col-sm-12 col-lg-12 col-xl-12 col-12\">\r\n          <br />\r\n          <div className=\"form-group\">\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              placeholder=\"Search bill by amount here\"\r\n              value={this.state.search}\r\n              onChange={this.updateSearch.bind(this)}\r\n            />\r\n          </div>\r\n          <h1 style={{ textAlign: 'center' }}>All Bills</h1>\r\n          <table className=\"table table-strip\">\r\n            <thead>\r\n              <tr>\r\n                <th>Status </th>\r\n                <th>Payment Type </th>\r\n                <th>CheckIn Code </th>\r\n                <th>Table #</th>\r\n                <th>Amount</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {allBill?.map((order) => (\r\n                <tr key={order?._id}>\r\n                  <td style={{ color: 'red' }}>\r\n                    <b>{order?.status.toUpperCase()}</b>\r\n                  </td>\r\n                  <td>{order?.paymentType}</td>\r\n                  <td>{order?.checkIn?.table?.checkInCode}</td>\r\n                  <td>{order?.checkIn?.table?.tableNo}</td>\r\n                  <td>{order?.amount} </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = ({ getAllBillsReducer }) => {\r\n  return {\r\n    allBills: getAllBillsReducer?.allBills,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { actionGetAlldBills })(AllBills);\r\n","import React from 'react';\r\n\r\nexport default class Example extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { time: {}, seconds: 1200 };\r\n    this.timer = 0;\r\n    this.startTimer = this.startTimer.bind(this);\r\n    this.countDown = this.countDown.bind(this);\r\n  }\r\n\r\n  secondsToTime(secs) {\r\n    let hours = Math.floor(secs / (60 * 60));\r\n\r\n    let divisor_for_minutes = secs % (60 * 60);\r\n    let minutes = Math.floor(divisor_for_minutes / 60);\r\n\r\n    let divisor_for_seconds = divisor_for_minutes % 60;\r\n    let seconds = Math.ceil(divisor_for_seconds);\r\n\r\n    let obj = {\r\n      h: hours,\r\n      m: minutes,\r\n      s: seconds,\r\n    };\r\n    return obj;\r\n  }\r\n\r\n  componentDidMount() {\r\n    let timeLeftVar = this.secondsToTime(this.state.seconds);\r\n    this.setState({ time: timeLeftVar });\r\n  }\r\n\r\n  startTimer() {\r\n    if (this.timer == 0 && this.state.seconds > 0) {\r\n      this.timer = setInterval(this.countDown, 1000);\r\n    }\r\n  }\r\n\r\n  countDown() {\r\n    // Remove one second, set state so a re-render happens.\r\n    let seconds = this.state.seconds - 1;\r\n    this.setState({\r\n      time: this.secondsToTime(seconds),\r\n      seconds: seconds,\r\n    });\r\n\r\n    // Check if we're at zero.\r\n    if (seconds == 0) {\r\n      clearInterval(this.timer);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button onClick={this.startTimer}>Start</button>\r\n        m: {this.state.time.m} s: {this.state.time.s}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { Route } from 'react-router-dom';\r\nimport React from 'react';\r\nimport Dashboard from './Dashboard';\r\nimport ItemsDetails from './Items/ItemsDetails';\r\nimport AddItem from './Items/AddItem';\r\nimport CategoryDetails from './Cataegories/CategoryDetails';\r\nimport AddCategory from './Cataegories/AddCategory';\r\nimport TableDetails from './Table/TableDetails';\r\nimport AddTable from './Table/AddTable';\r\nimport StaffDetails from './Staff/StaffDetails';\r\nimport AddStaff from './Staff/AddStaff';\r\nimport EditStaff from './Staff/EditStaff';\r\nimport AllOrders from './Order/AllOrders';\r\nimport PendingOrder from './Order/PendingOrder';\r\nimport VerifiedOrder from './Order/VerifiedOrder.js';\r\nimport PendingBills from './Bill/PendingBills';\r\nimport InProgressOrder from './Order/InProgress';\r\nimport CompletedOrder from './Order/Completed';\r\nimport PaidBills from './Bill/PaidBills';\r\nimport AllBills from './Bill/AllBills';\r\nimport Example from './countDown';\r\nexport const AdminRoutes = (props) => {\r\n  let { match } = props;\r\n  return (\r\n    <>\r\n      <Route path={`${match.path}/dashboard`} component={Dashboard} />\r\n      <Route exact path={`${match.path}/`} component={Dashboard} />\r\n      <Route exact path={`${match.path}/items`} component={ItemsDetails} />\r\n      <Route path={`${match.path}/items/add`} component={AddItem} />\r\n      <Route\r\n        exact\r\n        path={`${match.path}/category`}\r\n        component={CategoryDetails}\r\n      />\r\n      <Route path={`${match.path}/category/add`} component={AddCategory} />\r\n      <Route exact path={`${match.path}/table`} component={TableDetails} />\r\n      <Route path={`${match.path}/table/add`} component={AddTable} />\r\n\r\n      <Route exact path={`${match.path}/user`} component={StaffDetails} />\r\n      <Route path={`${match.path}/user/add`} component={AddStaff} />\r\n      <Route path={`${match.path}/user/edit`} component={EditStaff} />\r\n\r\n      <Route exact path={`${match.path}/orders`} component={AllOrders} />\r\n      <Route path={`${match.path}/orders/approved`} component={VerifiedOrder} />\r\n      <Route path={`${match.path}/orders/pending`} component={PendingOrder} />\r\n      <Route\r\n        path={`${match.path}/orders/progress`}\r\n        component={InProgressOrder}\r\n      />\r\n      <Route\r\n        path={`${match.path}/orders/Complete`}\r\n        component={CompletedOrder}\r\n      />\r\n      <Route exact path={`${match.path}/bills`} component={AllBills} />\r\n      <Route path={`${match.path}/bills/paid`} component={PaidBills} />\r\n      <Route path={`${match.path}/bills/pending`} component={PendingBills} />\r\n      <Route path={`${match.path}/count`} component={Example} />\r\n    </>\r\n  );\r\n};\r\n","import { Switch } from 'react-router-dom';\r\nimport React from 'react';\r\nimport SideBar from './sidebar/SideBar';\r\nimport TopBar from './Topbar/TopBar';\r\nimport './Layout.css';\r\nimport { StaffRoutes } from '../Users/Staff/StaffRoutes';\r\nimport { AdminRoutes } from '../Users/Admin/AdminRoutes';\r\n\r\nclass Layout extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isSideNavOpen: false,\r\n    };\r\n  }\r\n\r\n  toggleSidebar = () => {\r\n    this.setState({ isSideNavOpen: !this.state.isSideNavOpen });\r\n  };\r\n\r\n  render() {\r\n    const { isSideNavOpen } = this.state;\r\n    const { location } = this.props;\r\n    return (\r\n      <div id=\"wrapper\" className={`d-flex ${isSideNavOpen ? 'toggled' : ''}`}>\r\n        <SideBar {...this.props} className=\"shadow\" />\r\n\r\n        <div id=\"page-content-wrapper\" style={{ position: 'relative' }}>\r\n          <TopBar toggleSidebar={this.toggleSidebar} {...this.props} />\r\n\r\n          <div className=\"container-fluid mb-5\">\r\n            <Switch>\r\n              {location.pathname.includes('admin') && (\r\n                <AdminRoutes {...this.props} />\r\n              )}\r\n\r\n              {location.pathname.includes('staff') && (\r\n                <StaffRoutes {...this.props} />\r\n              )}\r\n            </Switch>\r\n          </div>\r\n\r\n          <footer\r\n            className=\"text-right bg-light border-top\"\r\n            style={{\r\n              position: 'absolute',\r\n              bottom: 0,\r\n              left: -1,\r\n              width: '100%',\r\n              padding: '10px 10px 10px 0',\r\n            }}\r\n          >\r\n            <small className=\"font-weight-bold\">\r\n              &#169; Bhiyya Pizza pvt. Ltd.\r\n            </small>\r\n          </footer>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Layout;\r\n","import React, { Component } from 'react';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Card,\r\n  Container,\r\n  InputGroup,\r\n  FormControl,\r\n  Button,\r\n} from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport default class Forget extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      validated: false,\r\n      email: '',\r\n    };\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const form = event.currentTarget;\r\n    this.setState({ validated: true });\r\n    if (form.checkValidity() === false) {\r\n      event.stopPropagation();\r\n      return;\r\n    }\r\n    const data = {\r\n      email: this.state.email,\r\n    };\r\n    delete data.validated;\r\n\r\n    toast.success('Email is sent to you successfully.', {\r\n      position: toast.POSITION.TOP_CENTER,\r\n    });\r\n    this.props.history.goBack();\r\n\r\n    // this.props.actionForgetPassword(data);\r\n  };\r\n\r\n  render() {\r\n    const { email, validated } = this.state;\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col md={{ span: 6, offset: 3 }} className=\"align-self-center\">\r\n            <h1 className=\"text-center font-weight-bold mt-5\">\r\n              Smart Ordering\r\n            </h1>\r\n            <Card>\r\n              <h3 className=\"text-center mt-5 mb-3\">Forget Password</h3>\r\n              <Form\r\n                className=\"mx-5\"\r\n                noValidate\r\n                validated={validated}\r\n                onSubmit={this.handleSubmit}\r\n              >\r\n                <Form.Group>\r\n                  <InputGroup>\r\n                    <FormControl\r\n                      value={email}\r\n                      onChange={this.handleChange}\r\n                      name=\"email\"\r\n                      placeholder=\"Please Enter Email\"\r\n                      aria-label=\"Username or Email\"\r\n                      aria-describedby=\"username-addon\"\r\n                      required\r\n                    />\r\n                    <InputGroup.Append>\r\n                      <InputGroup.Text id=\"username-addon\">\r\n                        <i className=\"fas fa-user\" />\r\n                      </InputGroup.Text>\r\n                    </InputGroup.Append>\r\n                  </InputGroup>\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-5\">\r\n                  <Button variant=\"primary\" block type=\"submit\">\r\n                    Submit\r\n                  </Button>\r\n                </Form.Group>\r\n              </Form>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { Container, Row, Col, Card } from 'react-bootstrap';\r\n\r\nexport default class ResetPassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      newPassword: '',\r\n      conPassword: '',\r\n    };\r\n  }\r\n  inputHandler = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  submitHandler = () => {\r\n    toast.success('password is reset successfully.');\r\n  };\r\n\r\n  render() {\r\n    const { newPassword, conPassword } = this.state;\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col md={{ span: 6, offset: 3 }} className=\"align-self-center\">\r\n            <h3 className=\"text-center font-weight-bold mt-5\">\r\n              Reset Password\r\n            </h3>\r\n            <Card className=\"pt-3 pb-3\">\r\n              <form className=\"mx-5\" onSubmit={this.submitHandler}>\r\n                <div className=\"form-group\">\r\n                  <label>New Password </label>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    placeholder=\"new password\"\r\n                    type=\"password\"\r\n                    name=\"newPasword\"\r\n                    onChange={this.inputHandler}\r\n                    value={newPassword}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label>Confrirm Password</label>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    placeholder=\"confirm password\"\r\n                    name=\"ConfirmPassword\"\r\n                    onChange={this.inputHandler}\r\n                    type=\"password\"\r\n                    value={conPassword}\r\n                  />\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                  Submit\r\n                </button>\r\n              </form>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport Login from './Components/Login/Login';\r\nimport Layout from './Components/layout/Layout';\r\nimport Forget from './Components/ForgetPassword/forget';\r\nimport ResetPassword from './Components/ForgetPassword/ResetPassword';\r\n\r\nexport const RootRoute = (props) => {\r\n  const { match } = props;\r\n  return (\r\n    <>\r\n      <Route exact path={`${match.url}`} component={Login} />\r\n      <Route exact path={`${match.url}login`} component={Login} />\r\n      <Route exact path={`${match.url}forget`} component={Forget} />\r\n      <Route exact path={`${match.url}reset`} component={ResetPassword} />\r\n      <PrivateRoute path={`${match.url}admin`} component={Layout} />\r\n      <PrivateRoute path={`${match.url}staff`} component={Layout} />\r\n    </>\r\n  );\r\n};\r\n","import { types } from '../../constants/index';\r\n\r\n// let loggedInUser = JSON.parse(localStorage.getItem('user'));\r\nconst initialState = { loggedIn: false, user: null };\r\n\r\nconst INITIAL_STATE = {\r\n  ...initialState,\r\n};\r\n\r\nexport const loginReducer = (state = INITIAL_STATE, data) => {\r\n  switch (data.type) {\r\n    case types.loggedIn:\r\n      return Object.assign({}, state, { loggedIn: data.payload });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case types.user:\r\n      let obj = Object.assign({}, state, { user: action.payload });\r\n      console.log(obj);\r\n      return obj;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { types } from '../../../../../constants/index';\r\n\r\nconst initialState = {\r\n  paidBills: [],\r\n  pendingBills: [],\r\n  allBills: [],\r\n};\r\n//get all bill reducer\r\nexport const getAllBillsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.getAllBills:\r\n      let obj = Object.assign({}, state, { allBills: action.payload });\r\n      console.log('get paid bills', obj);\r\n      return obj;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n// get paid bill reducer\r\nexport const getPaidBillsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.getPaidBills:\r\n      let obj = Object.assign({}, state, { paidBills: action.payload });\r\n      console.log('get paid bills', obj);\r\n      return obj;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n//get pending bill reducer\r\nexport const getPendingBillsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.getPendingBills:\r\n      let obj = Object.assign({}, state, { pendingBills: action.payload });\r\n      console.log('get paid bills', obj);\r\n      return obj;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { types } from '../../../../../constants/index';\r\nconst initialState = {\r\n  staffUser: [],\r\n};\r\n\r\nexport const getStaffUsersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.getStaffUser:\r\n      let obj = Object.assign({}, state, { staffUser: action.payload });\r\n      console.log('staff user', obj);\r\n      return obj;\r\n    // case types.deleteStaffUser:\r\n    //   const { staffUser } = state;\r\n    //   let newUser = staffUser.map((user) => {\r\n    //     user.id != action.payload.id ? user : '';\r\n    //   });\r\n    //   console.log('new Users ', newUser);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\n// import admin from './admin';\r\n// import user from './user';\r\nimport { loginReducer } from '../Components/Login/reducer';\r\nimport { userReducer } from '../Components/Login/reducer';\r\nimport {\r\n  getPaidBillsReducer,\r\n  getAllBillsReducer,\r\n  getPendingBillsReducer,\r\n} from '../Components/Users/Admin/Bill/store/reducer';\r\nimport { getStaffUsersReducer } from '../Components/Users/Admin/Staff/Store/reducer';\r\n\r\nexport default combineReducers({\r\n  loggedIn: loginReducer,\r\n  user: userReducer,\r\n  getPaidBillsReducer,\r\n  getPendingBillsReducer,\r\n  getAllBillsReducer,\r\n  getStaffUsersReducer,\r\n});\r\n","import {createStore, applyMiddleware} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from './Reducer/index.reducer';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(rootReducer, initialState, applyMiddleware(...middleware));\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport {usePromiseTracker} from \"react-promise-tracker\";\r\nimport ScaleLoader from 'react-spinners/ScaleLoader';\r\n// import './PromiseLoader.css';\r\n\r\nexport const PromiseLoader = () => {\r\n    const {promiseInProgress} = usePromiseTracker();\r\n    return (\r\n        promiseInProgress && (\r\n            <div className=\"spinner\">\r\n                <ScaleLoader\r\n                    size={200}\r\n                    color={\"#123abc\"}\r\n                    loading={true}\r\n                />\r\n            </div>\r\n        )\r\n    )\r\n};\r\n","import React, { Component } from 'react';\r\nimport {Route} from \"react-router-dom\";\r\nimport {RootRoute} from \"./RootRoute\";\r\nimport {ToastContainer} from \"react-toastify\";\r\nimport store from './store';\r\nimport {Provider} from 'react-redux';\r\nimport {PromiseLoader} from \"./Components/PromiseLoader\";\r\n\r\n\r\nclass App extends Component {\r\n    \r\n  \r\n  \r\n  render(){\r\n  return(\r\n    <Provider store={store}>\r\n            <PromiseLoader/>\r\n            <ToastContainer position=\"bottom-right\"/>\r\n            <Route path=\"/\" component={RootRoute}/>\r\n    </Provider>\r\n  );\r\n  }   \r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}